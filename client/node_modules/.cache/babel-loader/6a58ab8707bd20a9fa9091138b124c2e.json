{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!postId) return;\n\n    const fetchPost = async () => {\n      try {\n        const {\n          data\n        } = await supabase.from('Posts').select('*').eq('id', postId).single();\n        setPost(data);\n      } catch (error) {\n        setError('Error fetching post data');\n      }\n    };\n\n    fetchPost();\n  }, [postId]);\n  useEffect(() => {\n    if (!postId) return;\n\n    const fetchComments = async () => {\n      try {\n        const {\n          data\n        } = await supabase.from('Comments').select('*').eq('post_id', postId);\n        setComments(data || []);\n      } catch (error) {\n        setError('Error fetching comments data');\n      }\n    };\n\n    fetchComments();\n  }, [postId]);\n\n  const handleSubmitComment = async event => {\n    event.preventDefault();\n    if (!commentText.trim() || !post) return;\n\n    try {\n      await supabase.from('Comments').insert([{\n        post_id: post.id,\n        text: commentText\n      }]);\n      setCommentText('');\n      const {\n        data\n      } = await supabase.from('Comments').select('*').eq('post_id', postId);\n      setComments(data || []);\n    } catch (error) {\n      setError('Error adding comment');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details\",\n      children: post ? /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No post found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.text\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostPage, \"qB+DAe63xsb37tqRkhFX2041ipU=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Card","supabase","PostPage","postId","post","setPost","comments","setComments","commentText","setCommentText","error","setError","fetchPost","data","from","select","eq","single","fetchComments","handleSubmitComment","event","preventDefault","trim","insert","post_id","id","text","title","author","description","image","created_at","map","comment","e","target","value"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst PostPage = () => {\n    const { postId } = useParams();\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [commentText, setCommentText] = useState('');\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (!postId) return;\n        const fetchPost = async () => {\n            try {\n                const { data } = await supabase.from('Posts').select('*').eq('id', postId).single();\n                setPost(data);\n            } catch (error) {\n                setError('Error fetching post data');\n            }\n        };\n\n        fetchPost();\n    }, [postId]);\n\n    useEffect(() => {\n        if (!postId) return;\n        const fetchComments = async () => {\n            try {\n                const { data } = await supabase.from('Comments').select('*').eq('post_id', postId);\n                setComments(data || []);\n            } catch (error) {\n                setError('Error fetching comments data');\n           }\n        };\n\n        fetchComments();\n    }, [postId]);\n\n    const handleSubmitComment = async (event) => {\n        event.preventDefault();\n        if (!commentText.trim() || !post) return;\n\n        try {\n            await supabase.from('Comments').insert([{ post_id: post.id, text: commentText }]);\n            setCommentText('');\n            const { data } = await supabase.from('Comments').select('*').eq('post_id', postId);\n            setComments(data || []);\n        } catch (error) {\n            setError('Error adding comment');\n        }\n    };\n\n    return (\n        <div className=\"PostPage\">\n            <div className=\"post-details\">\n                {post ? (\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                    />\n                ) : (\n                    <p>No post found</p>\n                )}\n            </div>\n\n            <div className=\"comments\">\n                <h3>Comments</h3>\n                <ul>\n                    {comments.map(comment => (\n                        <li key={comment.id}>{comment.text}</li>\n                    ))}\n                </ul>\n                <form onSubmit={handleSubmitComment}>\n                    <input type=\"text\" value={commentText} onChange={(e) => setCommentText(e.target.value)} />\n                    <button type=\"submit\">Add Comment</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}