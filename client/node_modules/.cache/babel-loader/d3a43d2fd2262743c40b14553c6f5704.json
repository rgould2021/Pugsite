{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js\",\n    _s = $RefreshSig$();\n\n// PostPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams(); // Get the post ID from URL params\n\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*').eq('id', id).single(); // Fetch single post based on ID\n\n        if (error) {\n          throw error;\n        }\n\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error.message);\n      }\n    };\n\n    fetchPost();\n  }, [id]); // Fetch post whenever ID changes\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Show loading indicator while fetching post\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", post.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", post.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created at: \", new Date(post.created_at).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","PostPage","id","post","setPost","fetchPost","data","error","from","select","eq","single","console","message","title","author","description","Date","created_at","toLocaleString"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js"],"sourcesContent":["// PostPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\n\nconst PostPage = () => {\n  const { id } = useParams(); // Get the post ID from URL params\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('Posts')\n          .select('*')\n          .eq('id', id)\n          .single(); // Fetch single post based on ID\n        if (error) {\n          throw error;\n        }\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error.message);\n      }\n    };\n\n    fetchPost();\n  }, [id]); // Fetch post whenever ID changes\n\n  if (!post) {\n    return <div>Loading...</div>; // Show loading indicator while fetching post\n  }\n\n  return (\n    <div className=\"PostPage\">\n      <h2>{post.title}</h2>\n      <p>Author: {post.author}</p>\n      <p>Description: {post.description}</p>\n      <p>Created at: {new Date(post.created_at).toLocaleString()}</p>\n      {/* Add any other post details you want to display */}\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAASH,SAAS,EAAxB,CADqB,CACO;;EAC5B,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAM;UAAEC,IAAF;UAAQC;QAAR,IAAkB,MAAMP,QAAQ,CACnCQ,IAD2B,CACtB,OADsB,EAE3BC,MAF2B,CAEpB,GAFoB,EAG3BC,EAH2B,CAGxB,IAHwB,EAGlBR,EAHkB,EAI3BS,MAJ2B,EAA9B,CADE,CAKW;;QACb,IAAIJ,KAAJ,EAAW;UACT,MAAMA,KAAN;QACD;;QACDH,OAAO,CAACE,IAAD,CAAP;MACD,CAVD,CAUE,OAAOC,KAAP,EAAc;QACdK,OAAO,CAACL,KAAR,CAAc,sBAAd,EAAsCA,KAAK,CAACM,OAA5C;MACD;IACF,CAdD;;IAgBAR,SAAS;EACV,CAlBQ,EAkBN,CAACH,EAAD,CAlBM,CAAT,CAJqB,CAsBX;;EAEV,IAAI,CAACC,IAAL,EAAW;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP,CADS,CACqB;EAC/B;;EAED,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKA,IAAI,CAACW;IAAV;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBAAYX,IAAI,CAACY,MAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,4BAAiBZ,IAAI,CAACa,WAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,2BAAgB,IAAIC,IAAJ,CAASd,IAAI,CAACe,UAAd,EAA0BC,cAA1B,EAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CArCD;;GAAMlB,Q;UACWF,S;;;KADXE,Q;AAuCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}