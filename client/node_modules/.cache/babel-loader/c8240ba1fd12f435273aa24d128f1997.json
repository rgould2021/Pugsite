{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, FunctionRegion } from './types';\nexport var FunctionsClient = /*#__PURE__*/function () {\n  function FunctionsClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? {} : _ref$headers,\n        customFetch = _ref.customFetch,\n        _ref$region = _ref.region,\n        region = _ref$region === void 0 ? FunctionRegion.Any : _ref$region;\n\n    _classCallCheck(this, FunctionsClient);\n\n    this.url = url;\n    this.headers = headers;\n    this.region = region;\n    this.fetch = resolveFetch(customFetch);\n  }\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n\n\n  _createClass(FunctionsClient, [{\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n\n  }, {\n    key: \"invoke\",\n    value: function invoke(functionName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers, method, functionArgs, _headers, region, body, response, isRelayError, responseType, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                headers = options.headers, method = options.method, functionArgs = options.body;\n                _headers = {};\n                region = options.region;\n\n                if (!region) {\n                  region = this.region;\n                }\n\n                if (region && region !== 'any') {\n                  _headers['x-region'] = region;\n                }\n\n                if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n                  if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n                    // will work for File as File inherits Blob\n                    // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                    _headers['Content-Type'] = 'application/octet-stream';\n                    body = functionArgs;\n                  } else if (typeof functionArgs === 'string') {\n                    // plain string\n                    _headers['Content-Type'] = 'text/plain';\n                    body = functionArgs;\n                  } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                    // don't set content-type headers\n                    // Request will automatically add the right boundary value\n                    body = functionArgs;\n                  } else {\n                    // default, assume this is JSON\n                    _headers['Content-Type'] = 'application/json';\n                    body = JSON.stringify(functionArgs);\n                  }\n                }\n\n                _context.next = 9;\n                return this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                  method: method || 'POST',\n                  // headers priority is (high to low):\n                  // 1. invoke-level headers\n                  // 2. client-level headers\n                  // 3. default Content-Type header\n                  headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                  body: body\n                }).catch(function (fetchError) {\n                  throw new FunctionsFetchError(fetchError);\n                });\n\n              case 9:\n                response = _context.sent;\n                isRelayError = response.headers.get('x-relay-error');\n\n                if (!(isRelayError && isRelayError === 'true')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                throw new FunctionsRelayError(response);\n\n              case 13:\n                if (response.ok) {\n                  _context.next = 15;\n                  break;\n                }\n\n                throw new FunctionsHttpError(response);\n\n              case 15:\n                responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n\n                if (!(responseType === 'application/json')) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 19;\n                return response.json();\n\n              case 19:\n                data = _context.sent;\n                _context.next = 37;\n                break;\n\n              case 22:\n                if (!(responseType === 'application/octet-stream')) {\n                  _context.next = 28;\n                  break;\n                }\n\n                _context.next = 25;\n                return response.blob();\n\n              case 25:\n                data = _context.sent;\n                _context.next = 37;\n                break;\n\n              case 28:\n                if (!(responseType === 'multipart/form-data')) {\n                  _context.next = 34;\n                  break;\n                }\n\n                _context.next = 31;\n                return response.formData();\n\n              case 31:\n                data = _context.sent;\n                _context.next = 37;\n                break;\n\n              case 34:\n                _context.next = 36;\n                return response.text();\n\n              case 36:\n                data = _context.sent;\n\n              case 37:\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n\n              case 40:\n                _context.prev = 40;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: _context.t0\n                });\n\n              case 43:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 40]]);\n      }));\n    }\n  }]);\n\n  return FunctionsClient;\n}();","map":{"version":3,"mappings":"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","names":["resolveFetch","FunctionsFetchError","FunctionsHttpError","FunctionsRelayError","FunctionRegion","FunctionsClient","url","headers","customFetch","region","Any","fetch","token","Authorization","functionName","options","method","functionArgs","body","_headers","Object","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","catch","fetchError","response","isRelayError","get","ok","responseType","_a","split","trim","json","data","blob","formData","text","error"],"sources":["/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@supabase/functions-js/src/FunctionsClient.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n  FunctionRegion,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected region: FunctionRegion\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n      region = FunctionRegion.Any,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n      region?: FunctionRegion\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.region = region\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - The name of the Function to invoke.\n   * @param options - Options for invoking the Function.\n   */\n  async invoke<T = any>(\n    functionName: string,\n    options: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, method, body: functionArgs } = options\n      let _headers: Record<string, string> = {}\n      let { region } = options\n      if (!region) {\n        region = this.region\n      }\n      if (region && region !== 'any') {\n        _headers['x-region'] = region\n      }\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: method || 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}