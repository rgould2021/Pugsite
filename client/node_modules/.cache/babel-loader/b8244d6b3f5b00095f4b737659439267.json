{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './PostPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [commenterName, setCommenterName] = useState('');\n  const [commentContent, setCommentContent] = useState('');\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*').eq('id', id).single();\n\n        if (error) {\n          throw error;\n        }\n\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error.message);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Comments').select('*').eq('post_id', id);\n\n        if (error) {\n          throw error;\n        }\n\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n\n    fetchPost();\n    fetchComments();\n  }, [id]);\n\n  const handleSubmitComment = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Comments').insert([{\n        post_id: id,\n        commenter_name: commenterName,\n        text: commentContent\n      }]);\n\n      if (error) {\n        throw error;\n      } // Reload the page to reset the text boxes and display the new comment\n\n\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n\n  const handleDeleteComment = async commentId => {\n    try {\n      await supabase.from('Comments').delete().eq('id', commentId); // Filter out the deleted comment from the comments array\n\n      const updatedComments = comments.filter(comment => comment.id !== commentId);\n      setComments(updatedComments);\n    } catch (error) {\n      console.error('Error deleting comment:', error.message);\n    }\n  };\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", post.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", post.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created at: \", new Date(post.created_at).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: commenterName,\n          onChange: event => setCommenterName(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Your Comment\",\n          value: commentContent,\n          onChange: event => setCommentContent(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.commenter_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(comment.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteComment(comment.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"CF4NdPhTygY1dUyDdinxTA2/vL4=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","PostPage","id","post","setPost","commenterName","setCommenterName","commentContent","setCommentContent","comments","setComments","fetchPost","data","error","from","select","eq","single","console","message","fetchComments","handleSubmitComment","event","preventDefault","insert","post_id","commenter_name","text","window","location","reload","handleDeleteComment","commentId","delete","updatedComments","filter","comment","title","author","image","description","Date","created_at","toLocaleString","target","value","map"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './PostPage.css';\n\nconst PostPage = () => {\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  const [commenterName, setCommenterName] = useState('');\n  const [commentContent, setCommentContent] = useState('');\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('Posts')\n          .select('*')\n          .eq('id', id)\n          .single();\n        if (error) {\n          throw error;\n        }\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error.message);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('Comments')\n          .select('*')\n          .eq('post_id', id);\n        if (error) {\n          throw error;\n        }\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n\n    fetchPost();\n    fetchComments();\n  }, [id]);\n\n  const handleSubmitComment = async (event) => {\n    event.preventDefault();\n    try {\n      const { data, error } = await supabase.from('Comments').insert([\n        {\n          post_id: id,\n          commenter_name: commenterName,\n          text: commentContent,\n        },\n      ]);\n      if (error) {\n        throw error;\n      }\n      // Reload the page to reset the text boxes and display the new comment\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      await supabase.from('Comments').delete().eq('id', commentId);\n      // Filter out the deleted comment from the comments array\n      const updatedComments = comments.filter((comment) => comment.id !== commentId);\n      setComments(updatedComments);\n    } catch (error) {\n      console.error('Error deleting comment:', error.message);\n    }\n  };\n\n  if (!post) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"PostPage\">\n      <h2>{post.title}</h2>\n      <p>Author: {post.author}</p>\n      {post.image && <img src={post.image} alt=\"Post\" />}\n      <p>Description: {post.description}</p>\n      <p>Created at: {new Date(post.created_at).toLocaleString()}</p>\n\n      <div>\n        <h3>Comments</h3>\n        <form onSubmit={handleSubmitComment}>\n          <input\n            type=\"text\"\n            placeholder=\"Your Name\"\n            value={commenterName}\n            onChange={(event) => setCommenterName(event.target.value)}\n            required\n          />\n          <textarea\n            placeholder=\"Your Comment\"\n            value={commentContent}\n            onChange={(event) => setCommentContent(event.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit Comment</button>\n        </form>\n        <div>\n          {comments.map((comment) => (\n            <div key={comment.id}>\n              <p>{comment.commenter_name}</p>\n              <p>{comment.text}</p>\n              <p>{new Date(comment.created_at).toLocaleString()}</p>\n              <button onClick={() => handleDeleteComment(comment.id)}>Delete</button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}