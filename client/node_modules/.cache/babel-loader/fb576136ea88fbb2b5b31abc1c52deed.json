{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('created'); // Default sorting criteria\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n      setPosts(data);\n      setFilteredPosts(data);\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleSearch = event => {\n    const query = event.target.value.toLowerCase();\n    setSearchQuery(query);\n\n    if (query.trim() === '') {\n      setFilteredPosts(posts);\n    } else {\n      const filtered = posts.filter(post => post.title.toLowerCase().includes(query));\n      setFilteredPosts(filtered);\n    }\n  };\n\n  const handleSortChange = event => {\n    const selectedSortBy = event.target.value;\n    setSortBy(selectedSortBy);\n    sortPosts(selectedSortBy);\n  };\n\n  const sortPosts = criteria => {\n    let sortedPosts = [...filteredPosts];\n\n    if (criteria === 'created') {\n      sortedPosts.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n    } else if (criteria === 'likes') {\n      sortedPosts.sort((a, b) => b.betCount - a.betCount);\n    }\n\n    setFilteredPosts(sortedPosts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title...\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created\",\n          children: \"Sort by Created Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"likes\",\n          children: \"Sort by Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"bBV1uVEZ97CFDtBzYkYzTUQETm0=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","filteredPosts","setFilteredPosts","searchQuery","setSearchQuery","sortBy","setSortBy","fetchPosts","data","from","select","handleSearch","event","query","target","value","toLowerCase","trim","filtered","filter","post","title","includes","handleSortChange","selectedSortBy","sortPosts","criteria","sortedPosts","sort","a","b","Date","created_at","betCount","map","id","author","description","image"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [sortBy, setSortBy] = useState('created'); // Default sorting criteria\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n            setPosts(data);\n            setFilteredPosts(data);\n        };\n\n        fetchPosts();\n    }, []);\n\n    const handleSearch = (event) => {\n        const query = event.target.value.toLowerCase();\n        setSearchQuery(query);\n\n        if (query.trim() === '') {\n            setFilteredPosts(posts);\n        } else {\n            const filtered = posts.filter(post => post.title.toLowerCase().includes(query));\n            setFilteredPosts(filtered);\n        }\n    };\n\n    const handleSortChange = (event) => {\n        const selectedSortBy = event.target.value;\n        setSortBy(selectedSortBy);\n        sortPosts(selectedSortBy);\n    };\n\n    const sortPosts = (criteria) => {\n        let sortedPosts = [...filteredPosts];\n        if (criteria === 'created') {\n            sortedPosts.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n        } else if (criteria === 'likes') {\n            sortedPosts.sort((a, b) => b.betCount - a.betCount);\n        }\n        setFilteredPosts(sortedPosts);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by title...\"\n                    value={searchQuery}\n                    onChange={handleSearch}\n                />\n                <select value={sortBy} onChange={handleSortChange}>\n                    <option value=\"created\">Sort by Created Time</option>\n                    <option value=\"likes\">Sort by Likes</option>\n                </select>\n            </div>\n\n            {filteredPosts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`}>\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}