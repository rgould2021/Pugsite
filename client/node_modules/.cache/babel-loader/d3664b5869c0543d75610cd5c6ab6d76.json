{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Card.css';\nimport more from './more.png';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../client'; // Import the supabase client\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [count, setCount] = useState(props.likes || 0); // Initialize count with likes if available\n\n  const updateCount = async event => {\n    event.stopPropagation(); // Prevent event propagation\n\n    const updatedCount = count + 1;\n    setCount(updatedCount); // Update the bet count in the database\n\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').update({\n        betCount: updatedCount\n      }) // Update the bet count\n      .eq('id', props.id); // Update the post with the matching id\n\n      if (error) {\n        throw error;\n      } // Store the updated count in local storage\n\n\n      localStorage.setItem(`betCount_${props.id}`, updatedCount.toString());\n    } catch (error) {\n      console.error('Error updating bet count:', error.message); // Rollback the count if there's an error\n\n      setCount(count);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch the current count from the database when component mounts\n    const fetchData = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('betCount').eq('id', props.id).single();\n\n        if (error) {\n          throw error;\n        } // Update count with the fetched value\n\n\n        setCount(data.betCount || 0);\n      } catch (error) {\n        console.error('Error fetching bet count:', error.message);\n      }\n    };\n\n    fetchData(); // Call the async function\n  }, [props.id]); // Fetch data when the id prop changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${props.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moreButton\",\n        alt: \"edit button\",\n        src: more\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"author\",\n      children: \"by \" + props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), props.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: props.image,\n      alt: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), props.created_at && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timestamp\",\n      children: [\"Created at: \", new Date(props.created_at).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likeButton\",\n      onClick: updateCount,\n      children: [\"\\uD83D\\uDC4D Likes: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"4JZxSTaVTkPfwGthZ2DsmlSWDBA=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","more","Link","supabase","Card","props","count","setCount","likes","updateCount","event","stopPropagation","updatedCount","data","error","from","update","betCount","eq","id","localStorage","setItem","toString","console","message","fetchData","select","single","title","author","image","description","created_at","Date","toLocaleString"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Card.css';\nimport more from './more.png';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../client'; // Import the supabase client\n\nconst Card = (props) => {\n    const [count, setCount] = useState(props.likes || 0); // Initialize count with likes if available\n\n    const updateCount = async (event) => {\n        event.stopPropagation(); // Prevent event propagation\n        const updatedCount = count + 1;\n        setCount(updatedCount);\n\n        // Update the bet count in the database\n        try {\n            const { data, error } = await supabase\n                .from('Posts')\n                .update({ betCount: updatedCount }) // Update the bet count\n                .eq('id', props.id); // Update the post with the matching id\n\n            if (error) {\n                throw error;\n            }\n\n            // Store the updated count in local storage\n            localStorage.setItem(`betCount_${props.id}`, updatedCount.toString());\n        } catch (error) {\n            console.error('Error updating bet count:', error.message);\n            // Rollback the count if there's an error\n            setCount(count);\n        }\n    };\n\n    useEffect(() => {\n        // Fetch the current count from the database when component mounts\n        const fetchData = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from('Posts')\n                    .select('betCount')\n                    .eq('id', props.id)\n                    .single();\n\n                if (error) {\n                    throw error;\n                }\n\n                // Update count with the fetched value\n                setCount(data.betCount || 0);\n            } catch (error) {\n                console.error('Error fetching bet count:', error.message);\n            }\n        };\n\n        fetchData(); // Call the async function\n    }, [props.id]); // Fetch data when the id prop changes\n\n    return (\n        <div className=\"Card\">\n            <Link to={`/post/${props.id}`}>\n                <img className=\"moreButton\" alt=\"edit button\" src={more} />\n            </Link>\n            <h2 className=\"title\">{props.title}</h2>\n            <h3 className=\"author\">{\"by \" + props.author}</h3>\n            {props.image && <img className=\"image\" src={props.image} alt=\"post\" />}\n            <p className=\"description\">{props.description}</p>\n            {props.created_at && (\n                <p className=\"timestamp\">Created at: {new Date(props.created_at).toLocaleString()}</p>\n            )}\n            <div className=\"likeButton\" onClick={updateCount}>\n                &#128077; Likes: {count}\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}