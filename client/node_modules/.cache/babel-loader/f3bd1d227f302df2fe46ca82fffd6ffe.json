{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/components/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  useEffect(() => {\n    const fetchPost = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('*').eq('id', postId).single();\n      setPost(data);\n    };\n\n    fetchPost();\n  }, [postId]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const {\n        data\n      } = await supabase.from('Comments').select('*').eq('post_id', postId);\n      setComments(data);\n    };\n\n    fetchComments();\n  }, [postId]);\n\n  const handleSubmitComment = async event => {\n    event.preventDefault();\n    if (!commentText.trim()) return;\n\n    try {\n      await supabase.from('Comments').insert([{\n        post_id: postId,\n        text: commentText\n      }]);\n      setCommentText(''); // Refresh comments\n\n      const {\n        data\n      } = await supabase.from('Comments').select('*').eq('post_id', postId);\n      setComments(data);\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostPage\",\n    children: [post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author: \", post.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.text\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostPage, \"VH56Mbs4BIiGS80usYKgulmj83E=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","PostPage","postId","post","setPost","comments","setComments","commentText","setCommentText","fetchPost","data","from","select","eq","single","fetchComments","handleSubmitComment","event","preventDefault","trim","insert","post_id","text","error","console","message","title","author","description","image","map","comment","id","e","target","value"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/components/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\n\nconst PostPage = () => {\n    const { postId } = useParams();\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [commentText, setCommentText] = useState('');\n\n    useEffect(() => {\n        const fetchPost = async () => {\n            const { data } = await supabase.from('Posts').select('*').eq('id', postId).single();\n            setPost(data);\n        };\n\n        fetchPost();\n    }, [postId]);\n\n    useEffect(() => {\n        const fetchComments = async () => {\n            const { data } = await supabase.from('Comments').select('*').eq('post_id', postId);\n            setComments(data);\n        };\n\n        fetchComments();\n    }, [postId]);\n\n    const handleSubmitComment = async (event) => {\n        event.preventDefault();\n        if (!commentText.trim()) return;\n\n        try {\n            await supabase.from('Comments').insert([{ post_id: postId, text: commentText }]);\n            setCommentText('');\n            // Refresh comments\n            const { data } = await supabase.from('Comments').select('*').eq('post_id', postId);\n            setComments(data);\n        } catch (error) {\n            console.error('Error adding comment:', error.message);\n        }\n    };\n\n    return (\n        <div className=\"PostPage\">\n            {post ? (\n                <div className=\"post-details\">\n                    <h2>{post.title}</h2>\n                    <p>Author: {post.author}</p>\n                    <p>{post.description}</p>\n                    {post.image && <img src={post.image} alt=\"Post\" />}\n                </div>\n            ) : (\n                <p>Loading...</p>\n            )}\n\n            <div className=\"comments\">\n                <h3>Comments</h3>\n                <ul>\n                    {comments.map(comment => (\n                        <li key={comment.id}>{comment.text}</li>\n                    ))}\n                </ul>\n                <form onSubmit={handleSubmitComment}>\n                    <input type=\"text\" value={commentText} onChange={(e) => setCommentText(e.target.value)} />\n                    <button type=\"submit\">Add Comment</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}