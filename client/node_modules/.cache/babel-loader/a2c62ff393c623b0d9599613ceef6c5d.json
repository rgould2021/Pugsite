{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rickygould/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/rickygould/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/rickygould/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import'./Card.css';import more from'./more.png';import{Link}from'react-router-dom';import{supabase}from'../client';// Import the supabase client\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Card=function Card(props){var _useState=useState(props.likes||0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];// Initialize count with likes if available\nvar updateCount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var updatedCount,_yield$supabase$from$,data,error;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:updatedCount=count+1;setCount(updatedCount);// Update the bet count in the database\n_context.prev=2;_context.next=5;return supabase.from('Posts').update({betCount:updatedCount})// Update the bet count\n.eq('id',props.id);case 5:_yield$supabase$from$=_context.sent;data=_yield$supabase$from$.data;error=_yield$supabase$from$.error;if(!error){_context.next=10;break;}throw error;case 10:// Store the updated count in local storage\nlocalStorage.setItem(\"betCount_\".concat(props.id),updatedCount.toString());_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](2);console.error('Error updating bet count:',_context.t0.message);// Rollback the count if there's an error\nsetCount(count);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,13]]);}));return function updateCount(){return _ref.apply(this,arguments);};}();useEffect(function(){// Fetch the current count from the database when component mounts\nvar fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$supabase$from$2,data,error;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return supabase.from('Posts').select('betCount').eq('id',props.id).single();case 3:_yield$supabase$from$2=_context2.sent;data=_yield$supabase$from$2.data;error=_yield$supabase$from$2.error;if(!error){_context2.next=8;break;}throw error;case 8:// Update count with the fetched value\nsetCount(data.betCount||0);_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.error('Error fetching bet count:',_context2.t0.message);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();// Call the async function\n},[props.id]);// Fetch data when the id prop changes\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"Card\",children:[/*#__PURE__*/_jsx(Link,{to:\"/post/\".concat(props.id),children:/*#__PURE__*/_jsx(\"img\",{className:\"moreButton\",alt:\"edit button\",src:more})}),/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:props.title}),/*#__PURE__*/_jsx(\"h3\",{className:\"author\",children:\"by \"+props.author}),props.image&&/*#__PURE__*/_jsx(\"img\",{className:\"image\",src:props.image,alt:\"post\"}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:props.description}),props.created_at&&/*#__PURE__*/_jsxs(\"p\",{className:\"timestamp\",children:[\"Created at: \",new Date(props.created_at).toLocaleString()]}),/*#__PURE__*/_jsxs(\"button\",{className:\"betButton\",onClick:updateCount,children:[\"\\uD83D\\uDC4D Likes: \",count]})]});};export default Card;","map":{"version":3,"names":["React","useState","useEffect","more","Link","supabase","Card","props","likes","count","setCount","updateCount","updatedCount","from","update","betCount","eq","id","data","error","localStorage","setItem","toString","console","message","fetchData","select","single","title","author","image","description","created_at","Date","toLocaleString"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Card.css';\nimport more from './more.png';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../client'; // Import the supabase client\n\nconst Card = (props) => {\n    const [count, setCount] = useState(props.likes || 0); // Initialize count with likes if available\n\n    const updateCount = async () => {\n        const updatedCount = count + 1;\n        setCount(updatedCount);\n\n        // Update the bet count in the database\n        try {\n            const { data, error } = await supabase\n                .from('Posts')\n                .update({ betCount: updatedCount }) // Update the bet count\n                .eq('id', props.id); // Update the post with the matching id\n\n            if (error) {\n                throw error;\n            }\n\n            // Store the updated count in local storage\n            localStorage.setItem(`betCount_${props.id}`, updatedCount.toString());\n        } catch (error) {\n            console.error('Error updating bet count:', error.message);\n            // Rollback the count if there's an error\n            setCount(count);\n        }\n    };\n\n    useEffect(() => {\n        // Fetch the current count from the database when component mounts\n        const fetchData = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from('Posts')\n                    .select('betCount')\n                    .eq('id', props.id)\n                    .single();\n\n                if (error) {\n                    throw error;\n                }\n\n                // Update count with the fetched value\n                setCount(data.betCount || 0);\n            } catch (error) {\n                console.error('Error fetching bet count:', error.message);\n            }\n        };\n\n        fetchData(); // Call the async function\n    }, [props.id]); // Fetch data when the id prop changes\n\n    return (\n        <div className=\"Card\">\n            <Link to={`/post/${props.id}`}>\n                <img className=\"moreButton\" alt=\"edit button\" src={more} />\n            </Link>\n            <h2 className=\"title\">{props.title}</h2>\n            <h3 className=\"author\">{\"by \" + props.author}</h3>\n            {props.image && <img className=\"image\" src={props.image} alt=\"post\" />}\n            <p className=\"description\">{props.description}</p>\n            {props.created_at && (\n                <p className=\"timestamp\">Created at: {new Date(props.created_at).toLocaleString()}</p>\n            )}\n            <button className=\"betButton\" onClick={updateCount}>\n                &#128077; Likes: {count}\n            </button>\n        </div>\n    );\n};\n\nexport default Card;\n"],"mappings":"ubAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,YAAP,CACA,MAAOC,KAAP,KAAiB,YAAjB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,KAAyB,WAAzB,CAAsC;wFAEtC,GAAMC,KAAI,CAAG,QAAPA,KAAO,CAACC,KAAD,CAAW,CACpB,cAA0BN,QAAQ,CAACM,KAAK,CAACC,KAAN,EAAe,CAAhB,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAAsD;AAEtD,GAAMC,YAAW,4FAAG,uLACVC,YADU,CACKH,KAAK,CAAG,CADb,CAEhBC,QAAQ,CAACE,YAAD,CAAR,CAEA;AAJgB,sCAMkBP,SAAQ,CACjCQ,IADyB,CACpB,OADoB,EAEzBC,MAFyB,CAElB,CAAEC,QAAQ,CAAEH,YAAZ,CAFkB,CAEU;AAFV,CAGzBI,EAHyB,CAGtB,IAHsB,CAGhBT,KAAK,CAACU,EAHU,CANlB,4CAMJC,IANI,uBAMJA,IANI,CAMEC,KANF,uBAMEA,KANF,KAWRA,KAXQ,+BAYFA,MAZE,SAeZ;AACAC,YAAY,CAACC,OAAb,oBAAiCd,KAAK,CAACU,EAAvC,EAA6CL,YAAY,CAACU,QAAb,EAA7C,EAhBY,iFAkBZC,OAAO,CAACJ,KAAR,CAAc,2BAAd,CAA2C,YAAMK,OAAjD,EACA;AACAd,QAAQ,CAACD,KAAD,CAAR,CApBY,qEAAH,kBAAXE,YAAW,0CAAjB,CAwBAT,SAAS,CAAC,UAAM,CACZ;AACA,GAAMuB,UAAS,6FAAG,wNAEoBpB,SAAQ,CACjCQ,IADyB,CACpB,OADoB,EAEzBa,MAFyB,CAElB,UAFkB,EAGzBV,EAHyB,CAGtB,IAHsB,CAGhBT,KAAK,CAACU,EAHU,EAIzBU,MAJyB,EAFpB,8CAEFT,IAFE,wBAEFA,IAFE,CAEIC,KAFJ,wBAEIA,KAFJ,KAQNA,KARM,+BASAA,MATA,QAYV;AACAT,QAAQ,CAACQ,IAAI,CAACH,QAAL,EAAiB,CAAlB,CAAR,CAbU,qFAeVQ,OAAO,CAACJ,KAAR,CAAc,2BAAd,CAA2C,aAAMK,OAAjD,EAfU,uEAAH,kBAATC,UAAS,2CAAf,CAmBAA,SAAS,GAAI;AAChB,CAtBQ,CAsBN,CAAClB,KAAK,CAACU,EAAP,CAtBM,CAAT,CAsBgB;AAEhB,mBACI,aAAK,SAAS,CAAC,MAAf,wBACI,KAAC,IAAD,EAAM,EAAE,iBAAWV,KAAK,CAACU,EAAjB,CAAR,uBACI,YAAK,SAAS,CAAC,YAAf,CAA4B,GAAG,CAAC,aAAhC,CAA8C,GAAG,CAAEd,IAAnD,EADJ,EADJ,cAII,WAAI,SAAS,CAAC,OAAd,UAAuBI,KAAK,CAACqB,KAA7B,EAJJ,cAKI,WAAI,SAAS,CAAC,QAAd,UAAwB,MAAQrB,KAAK,CAACsB,MAAtC,EALJ,CAMKtB,KAAK,CAACuB,KAAN,eAAe,YAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEvB,KAAK,CAACuB,KAAlC,CAAyC,GAAG,CAAC,MAA7C,EANpB,cAOI,UAAG,SAAS,CAAC,aAAb,UAA4BvB,KAAK,CAACwB,WAAlC,EAPJ,CAQKxB,KAAK,CAACyB,UAAN,eACG,WAAG,SAAS,CAAC,WAAb,0BAAsC,GAAIC,KAAJ,CAAS1B,KAAK,CAACyB,UAAf,EAA2BE,cAA3B,EAAtC,GATR,cAWI,gBAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAEvB,WAAvC,kCACsBF,KADtB,GAXJ,GADJ,CAiBH,CApED,CAsEA,cAAeH,KAAf"},"metadata":{},"sourceType":"module"}