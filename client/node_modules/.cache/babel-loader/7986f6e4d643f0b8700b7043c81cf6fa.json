{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        if (postId) {\n          const {\n            data\n          } = await supabase.from('Posts').select('*').eq('id', postId).single();\n          setPost(data);\n        }\n      } catch (error) {\n        setError('Error fetching post data');\n      }\n    };\n\n    fetchPost();\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostPage\",\n    children: [post && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author: \", post.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostPage, \"uxR5Cnv8LJokIUV7RsHfphKPWaY=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","PostPage","postId","post","setPost","error","setError","fetchPost","data","from","select","eq","single","title","author","description","image"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\n\nconst PostPage = () => {\n    const { postId } = useParams();\n    const [post, setPost] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchPost = async () => {\n            try {\n                if (postId) {\n                    const { data } = await supabase.from('Posts').select('*').eq('id', postId).single();\n                    setPost(data);\n                }\n            } catch (error) {\n                setError('Error fetching post data');\n            }\n        };\n\n        fetchPost();\n    }, [postId]);\n\n    return (\n        <div className=\"PostPage\">\n            {post && (\n                <div className=\"post-details\">\n                    <h2>{post.title}</h2>\n                    <p>Author: {post.author}</p>\n                    <p>{post.description}</p>\n                    {post.image && <img src={post.image} alt=\"Post\" />}\n                </div>\n            )}\n            {error && <p>Error: {error}</p>}\n        </div>\n    );\n};\n\nexport default PostPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAaH,SAAS,EAA5B;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1B,IAAI;QACA,IAAIL,MAAJ,EAAY;UACR,MAAM;YAAEM;UAAF,IAAW,MAAMR,QAAQ,CAACS,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,GAA9B,EAAmCC,EAAnC,CAAsC,IAAtC,EAA4CT,MAA5C,EAAoDU,MAApD,EAAvB;UACAR,OAAO,CAACI,IAAD,CAAP;QACH;MACJ,CALD,CAKE,OAAOH,KAAP,EAAc;QACZC,QAAQ,CAAC,0BAAD,CAAR;MACH;IACJ,CATD;;IAWAC,SAAS;EACZ,CAbQ,EAaN,CAACL,MAAD,CAbM,CAAT;EAeA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,WACKC,IAAI,iBACD;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAA,UAAKA,IAAI,CAACU;MAAV;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,uBAAYV,IAAI,CAACW,MAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAIX,IAAI,CAACY;MAAT;QAAA;QAAA;QAAA;MAAA,QAHJ,EAIKZ,IAAI,CAACa,KAAL,iBAAc;QAAK,GAAG,EAAEb,IAAI,CAACa,KAAf;QAAsB,GAAG,EAAC;MAA1B;QAAA;QAAA;QAAA;MAAA,QAJnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFR,EASKX,KAAK,iBAAI;MAAA,sBAAWA,KAAX;IAAA;MAAA;MAAA;MAAA;IAAA,QATd;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAjCD;;GAAMJ,Q;UACiBF,S;;;KADjBE,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}