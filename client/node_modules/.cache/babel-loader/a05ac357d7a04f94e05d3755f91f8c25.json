{"ast":null,"code":"import { API_VERSION_HEADER_NAME } from './constants';\nexport function expiresAt(expiresIn) {\n  const timeNow = Math.round(Date.now() / 1000);\n  return timeNow + expiresIn;\n}\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\n\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false;\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false;\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable;\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`;\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey);\n    globalThis.localStorage.removeItem(randomKey);\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = true;\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = false;\n  }\n\n  return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\n\nexport function parseParametersFromURL(href) {\n  const result = {};\n  const url = new URL(href);\n\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value;\n      });\n    } catch (e) {// hash is not a query string\n    }\n  } // search parameters take precedence over hash parameters\n\n\n  url.searchParams.forEach((value, key) => {\n    result[key] = value;\n  });\n  return result;\n}\nexport const resolveFetch = customFetch => {\n  let _fetch;\n\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return import('@supabase/node-fetch').then(_ref => {\n        let {\n          default: fetch\n        } = _ref;\n        return fetch(...args);\n      });\n    };\n  } else {\n    _fetch = fetch;\n  }\n\n  return function () {\n    return _fetch(...arguments);\n  };\n};\nexport const looksLikeFetchResponse = maybeResponse => {\n  return typeof maybeResponse === 'object' && maybeResponse !== null && 'status' in maybeResponse && 'ok' in maybeResponse && 'json' in maybeResponse && typeof maybeResponse.json === 'function';\n}; // Storage helpers\n\nexport const setItemAsync = async (storage, key, data) => {\n  await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n  const value = await storage.getItem(key);\n\n  if (!value) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(value);\n  } catch (_a) {\n    return value;\n  }\n};\nexport const removeItemAsync = async (storage, key) => {\n  await storage.removeItem(key);\n};\nexport function decodeBase64URL(value) {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let base64 = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  value = value.replace('-', '+').replace('_', '/');\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++));\n    enc2 = key.indexOf(value.charAt(i++));\n    enc3 = key.indexOf(value.charAt(i++));\n    enc4 = key.indexOf(value.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    base64 = base64 + String.fromCharCode(chr1);\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2);\n    }\n\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3);\n    }\n  }\n\n  return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\n\nexport class Deferred {\n  constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n    this.promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n}\nDeferred.promiseConstructor = Promise; // Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\n\nexport function decodeJWTPayload(token) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n  const parts = token.split('.');\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure');\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format');\n  }\n\n  const base64Url = parts[1];\n  return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\n\nexport async function sleep(time) {\n  return await new Promise(accept => {\n    setTimeout(() => accept(null), time);\n  });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\n\nexport function retryable(fn, isRetryable) {\n  const promise = new Promise((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n\n    (async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt);\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result);\n            return;\n          }\n        } catch (e) {\n          if (!isRetryable(attempt, e)) {\n            reject(e);\n            return;\n          }\n        }\n      }\n    })();\n  });\n  return promise;\n}\n\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n} // Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\n\n\nexport function generatePKCEVerifier() {\n  const verifierLength = 56;\n  const array = new Uint32Array(verifierLength);\n\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n    const charSetLen = charSet.length;\n    let verifier = '';\n\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n    }\n\n    return verifier;\n  }\n\n  crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\n\nasync function sha256(randomString) {\n  const encoder = new TextEncoder();\n  const encodedData = encoder.encode(randomString);\n  const hash = await crypto.subtle.digest('SHA-256', encodedData);\n  const bytes = new Uint8Array(hash);\n  return Array.from(bytes).map(c => String.fromCharCode(c)).join('');\n}\n\nfunction base64urlencode(str) {\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\nexport async function generatePKCEChallenge(verifier) {\n  const hasCryptoSupport = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined' && typeof TextEncoder !== 'undefined';\n\n  if (!hasCryptoSupport) {\n    console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n    return verifier;\n  }\n\n  const hashed = await sha256(verifier);\n  return base64urlencode(hashed);\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey) {\n  let isPasswordRecovery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const codeVerifier = generatePKCEVerifier();\n  let storedCodeVerifier = codeVerifier;\n\n  if (isPasswordRecovery) {\n    storedCodeVerifier += '/PASSWORD_RECOVERY';\n  }\n\n  await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n  const codeChallenge = await generatePKCEChallenge(codeVerifier);\n  const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n  return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\n\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n  const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n\n  if (!apiVersion) {\n    return null;\n  }\n\n  if (!apiVersion.match(API_VERSION_REGEX)) {\n    return null;\n  }\n\n  try {\n    const date = new Date(`${apiVersion}T00:00:00.0Z`);\n    return date;\n  } catch (e) {\n    return null;\n  }\n}","map":{"version":3,"mappings":"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","names":["API_VERSION_HEADER_NAME","expiresAt","expiresIn","timeNow","Math","round","Date","now","uuid","replace","c","r","random","v","toString","isBrowser","document","localStorageWriteTests","tested","writable","supportsLocalStorage","globalThis","localStorage","e","randomKey","setItem","removeItem","parseParametersFromURL","href","result","url","URL","hash","hashSearchParams","URLSearchParams","substring","forEach","value","key","searchParams","resolveFetch","customFetch","_fetch","fetch","args","then","default","looksLikeFetchResponse","maybeResponse","json","setItemAsync","storage","data","JSON","stringify","getItemAsync","getItem","parse","removeItemAsync","decodeBase64URL","base64","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","length","indexOf","charAt","String","fromCharCode","Deferred","constructor","promise","promiseConstructor","res","rej","resolve","reject","Promise","decodeJWTPayload","token","base64UrlRegex","parts","split","Error","test","base64Url","sleep","time","accept","setTimeout","retryable","fn","isRetryable","attempt","Infinity","dec2hex","dec","substr","generatePKCEVerifier","verifierLength","array","Uint32Array","crypto","charSet","charSetLen","verifier","floor","getRandomValues","Array","from","join","sha256","randomString","encoder","TextEncoder","encodedData","encode","subtle","digest","bytes","Uint8Array","map","base64urlencode","str","btoa","generatePKCEChallenge","hasCryptoSupport","console","warn","hashed","getCodeChallengeAndMethod","storageKey","isPasswordRecovery","codeVerifier","storedCodeVerifier","codeChallenge","codeChallengeMethod","API_VERSION_REGEX","parseResponseAPIVersion","response","apiVersion","headers","get","match","date"],"sources":["/Users/rickygould/Documents/Github/Pug-Site/client/node_modules/@supabase/auth-js/src/lib/helpers.ts"],"sourcesContent":["import { API_VERSION_HEADER_NAME } from './constants'\nimport { SupportedStorage } from './types'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof document !== 'undefined'\n\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false,\n}\n\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey)\n    globalThis.localStorage.removeItem(randomKey)\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = true\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = false\n  }\n\n  return localStorageWriteTests.writable\n}\n\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href: string) {\n  const result: { [parameter: string]: string } = {}\n\n  const url = new URL(href)\n\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1))\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value\n      })\n    } catch (e: any) {\n      // hash is not a query string\n    }\n  }\n\n  // search parameters take precedence over hash parameters\n  url.searchParams.forEach((value, key) => {\n    result[key] = value\n  })\n\n  return result\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) =>\n      import('@supabase/node-fetch' as any).then(({ default: fetch }) => fetch(...args))\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const looksLikeFetchResponse = (maybeResponse: unknown): maybeResponse is Response => {\n  return (\n    typeof maybeResponse === 'object' &&\n    maybeResponse !== null &&\n    'status' in maybeResponse &&\n    'ok' in maybeResponse &&\n    'json' in maybeResponse &&\n    typeof (maybeResponse as any).json === 'function'\n  )\n}\n\n// Storage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  await storage.setItem(key, JSON.stringify(data))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<unknown> => {\n  const value = await storage.getItem(key)\n\n  if (!value) {\n    return null\n  }\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  await storage.removeItem(key)\n}\n\nexport function decodeBase64URL(value: string): string {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  let base64 = ''\n  let chr1, chr2, chr3\n  let enc1, enc2, enc3, enc4\n  let i = 0\n  value = value.replace('-', '+').replace('_', '/')\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++))\n    enc2 = key.indexOf(value.charAt(i++))\n    enc3 = key.indexOf(value.charAt(i++))\n    enc4 = key.indexOf(value.charAt(i++))\n    chr1 = (enc1 << 2) | (enc2 >> 4)\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    chr3 = ((enc3 & 3) << 6) | enc4\n    base64 = base64 + String.fromCharCode(chr1)\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2)\n    }\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3)\n    }\n  }\n  return base64\n}\n\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred<T = any> {\n  public static promiseConstructor: PromiseConstructor = Promise\n\n  public readonly promise!: PromiseLike<T>\n\n  public readonly resolve!: (value?: T | PromiseLike<T>) => void\n\n  public readonly reject!: (reason?: any) => any\n\n  public constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this as any).promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).resolve = res\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).reject = rej\n    })\n  }\n}\n\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token: string) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i\n\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure')\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format')\n  }\n\n  const base64Url = parts[1]\n  return JSON.parse(decodeBase64URL(base64Url))\n}\n\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time: number): Promise<null> {\n  return await new Promise((accept) => {\n    setTimeout(() => accept(null), time)\n  })\n}\n\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable<T>(\n  fn: (attempt: number) => Promise<T>,\n  isRetryable: (attempt: number, error: any | null, result?: T) => boolean\n): Promise<T> {\n  const promise = new Promise<T>((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt)\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result)\n            return\n          }\n        } catch (e: any) {\n          if (!isRetryable(attempt, e)) {\n            reject(e)\n            return\n          }\n        }\n      }\n    })()\n  })\n\n  return promise\n}\n\nfunction dec2hex(dec: number) {\n  return ('0' + dec.toString(16)).substr(-2)\n}\n\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n  const verifierLength = 56\n  const array = new Uint32Array(verifierLength)\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~'\n    const charSetLen = charSet.length\n    let verifier = ''\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen))\n    }\n    return verifier\n  }\n  crypto.getRandomValues(array)\n  return Array.from(array, dec2hex).join('')\n}\n\nasync function sha256(randomString: string) {\n  const encoder = new TextEncoder()\n  const encodedData = encoder.encode(randomString)\n  const hash = await crypto.subtle.digest('SHA-256', encodedData)\n  const bytes = new Uint8Array(hash)\n\n  return Array.from(bytes)\n    .map((c) => String.fromCharCode(c))\n    .join('')\n}\n\nfunction base64urlencode(str: string) {\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '')\n}\n\nexport async function generatePKCEChallenge(verifier: string) {\n  const hasCryptoSupport =\n    typeof crypto !== 'undefined' &&\n    typeof crypto.subtle !== 'undefined' &&\n    typeof TextEncoder !== 'undefined'\n\n  if (!hasCryptoSupport) {\n    console.warn(\n      'WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.'\n    )\n    return verifier\n  }\n  const hashed = await sha256(verifier)\n  return base64urlencode(hashed)\n}\n\nexport async function getCodeChallengeAndMethod(\n  storage: SupportedStorage,\n  storageKey: string,\n  isPasswordRecovery = false\n) {\n  const codeVerifier = generatePKCEVerifier()\n  let storedCodeVerifier = codeVerifier\n  if (isPasswordRecovery) {\n    storedCodeVerifier += '/PASSWORD_RECOVERY'\n  }\n  await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier)\n  const codeChallenge = await generatePKCEChallenge(codeVerifier)\n  const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n  return [codeChallenge, codeChallengeMethod]\n}\n\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i\n\nexport function parseResponseAPIVersion(response: Response) {\n  const apiVersion = response.headers.get(API_VERSION_HEADER_NAME)\n\n  if (!apiVersion) {\n    return null\n  }\n\n  if (!apiVersion.match(API_VERSION_REGEX)) {\n    return null\n  }\n\n  try {\n    const date = new Date(`${apiVersion}T00:00:00.0Z`)\n    return date\n  } catch (e: any) {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}