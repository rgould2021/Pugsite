{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('created_at'); // Default sort by created_at\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount'); // Sort posts based on sortBy value\n\n      if (sortBy === 'created_at') {\n        data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)); // Sort by created_at\n      } else if (sortBy === 'betCount') {\n        data = data.sort((a, b) => b.betCount - a.betCount); // Sort by betCount\n      }\n\n      setPosts(data);\n    };\n\n    fetchPosts();\n  }, [sortBy]);\n\n  const handleSortChange = e => {\n    setSortBy(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        onChange: handleSortChange,\n        value: sortBy,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created_at\",\n          children: \"Created Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"betCount\",\n          children: \"Upvotes Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"SmTwESznwYeAqCva3pig+/yGyDk=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","sortBy","setSortBy","fetchPosts","data","from","select","sort","a","b","Date","created_at","betCount","handleSortChange","e","target","value","map","post","id","title","author","description","image"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [sortBy, setSortBy] = useState('created_at'); // Default sort by created_at\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            let { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n\n            // Sort posts based on sortBy value\n            if (sortBy === 'created_at') {\n                data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)); // Sort by created_at\n            } else if (sortBy === 'betCount') {\n                data = data.sort((a, b) => b.betCount - a.betCount); // Sort by betCount\n            }\n\n            setPosts(data);\n        };\n\n        fetchPosts();\n    }, [sortBy]);\n\n    const handleSortChange = (e) => {\n        setSortBy(e.target.value);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <div>\n                <label htmlFor=\"sort\">Sort by:</label>\n                <select id=\"sort\" onChange={handleSortChange} value={sortBy}>\n                    <option value=\"created_at\">Created Time</option>\n                    <option value=\"betCount\">Upvotes Count</option>\n                </select>\n            </div>\n            {posts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`}>\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,YAAD,CAApC,CAFoB,CAEgC;;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,YAAY;MAC3B,IAAI;QAAEC;MAAF,IAAW,MAAMP,QAAQ,CAACQ,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,6DAA9B,CAArB,CAD2B,CAG3B;;MACA,IAAIL,MAAM,KAAK,YAAf,EAA6B;QACzBG,IAAI,GAAGA,IAAI,CAACG,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,UAAX,IAAyB,IAAID,IAAJ,CAASF,CAAC,CAACG,UAAX,CAA7C,CAAP,CADyB,CACoD;MAChF,CAFD,MAEO,IAAIV,MAAM,KAAK,UAAf,EAA2B;QAC9BG,IAAI,GAAGA,IAAI,CAACG,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACG,QAAF,GAAaJ,CAAC,CAACI,QAAnC,CAAP,CAD8B,CACuB;MACxD;;MAEDZ,QAAQ,CAACI,IAAD,CAAR;IACH,CAXD;;IAaAD,UAAU;EACb,CAfQ,EAeN,CAACF,MAAD,CAfM,CAAT;;EAiBA,MAAMY,gBAAgB,GAAIC,CAAD,IAAO;IAC5BZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA,wBACI;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,EAAE,EAAC,MAAX;QAAkB,QAAQ,EAAEH,gBAA5B;QAA8C,KAAK,EAAEZ,MAArD;QAAA,wBACI;UAAQ,KAAK,EAAC,YAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,KAAK,EAAC,UAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAQKF,KAAK,CAACkB,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;MAAoB,EAAE,EAAG,SAAQA,IAAI,CAACC,EAAG,EAAzC;MAAA,uBACI,QAAC,IAAD;QACI,EAAE,EAAED,IAAI,CAACC,EADb;QAEI,KAAK,EAAED,IAAI,CAACE,KAFhB;QAGI,MAAM,EAAEF,IAAI,CAACG,MAHjB;QAII,WAAW,EAAEH,IAAI,CAACI,WAJtB;QAKI,KAAK,EAAEJ,IAAI,CAACK,KALhB;QAMI,UAAU,EAAEL,IAAI,CAACP;MANrB;QAAA;QAAA;QAAA;MAAA;IADJ,GAAWO,IAAI,CAACC,EAAhB;MAAA;MAAA;MAAA;IAAA,QADH,CARL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CAhDD;;GAAMrB,S;;KAAAA,S;AAkDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}