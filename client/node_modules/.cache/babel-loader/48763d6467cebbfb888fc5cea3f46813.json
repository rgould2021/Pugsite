{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Documents/Github/Pug-Site/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [applyFilter, setApplyFilter] = useState(false);\n  const [sortCriteria, setSortCriteria] = useState('created_at');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n\n      if (error) {\n        console.error('Error fetching posts:', error.message);\n        return;\n      }\n\n      setPosts(data);\n      setFilteredPosts(data);\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    applyFilters();\n  }, [searchQuery, applyFilter, sortCriteria]);\n\n  const applyFilters = () => {\n    let filtered = [...posts];\n\n    if (applyFilter) {\n      filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n\n    if (sortCriteria === 'created_at') {\n      filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n    } else if (sortCriteria === 'likes') {\n      filtered.sort((a, b) => b.betCount - a.betCount);\n    }\n\n    setFilteredPosts(filtered);\n  };\n\n  const handleSearch = event => {\n    const query = event.target.value;\n    setSearchQuery(query);\n  };\n\n  const handleApplyFilterChange = event => {\n    setApplyFilter(event.target.checked);\n  };\n\n  const handleSortChange = event => {\n    setSortCriteria(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-options mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: applyFilter,\n          onChange: handleApplyFilterChange,\n          className: \"form-check-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), \"Apply Filter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select mt-2\",\n        value: sortCriteria,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created_at\",\n          children: \"Sort by Created Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"likes\",\n          children: \"Sort by Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Search by title...\",\n      value: searchQuery,\n      onChange: handleSearch,\n      disabled: !applyFilter // Disable search when filter is not applied\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      className: \"text-decoration-none\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at,\n        likes: post.betCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"Ye3yxgCUPeMjaW86hh0t43ql9F4=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","filteredPosts","setFilteredPosts","searchQuery","setSearchQuery","applyFilter","setApplyFilter","sortCriteria","setSortCriteria","fetchPosts","data","error","from","select","console","message","applyFilters","filtered","filter","post","title","toLowerCase","includes","sort","a","b","Date","created_at","betCount","handleSearch","event","query","target","value","handleApplyFilterChange","checked","handleSortChange","map","id","author","description","image"],"sources":["/Users/rickygould/Documents/Github/Pug-Site/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [applyFilter, setApplyFilter] = useState(false);\n    const [sortCriteria, setSortCriteria] = useState('created_at');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data, error } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n            if (error) {\n                console.error('Error fetching posts:', error.message);\n                return;\n            }\n            setPosts(data);\n            setFilteredPosts(data);\n        };\n\n        fetchPosts();\n    }, []);\n\n    useEffect(() => {\n        applyFilters();\n    }, [searchQuery, applyFilter, sortCriteria]);\n\n    const applyFilters = () => {\n        let filtered = [...posts];\n\n        if (applyFilter) {\n            filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n        }\n\n        if (sortCriteria === 'created_at') {\n            filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        } else if (sortCriteria === 'likes') {\n            filtered.sort((a, b) => b.betCount - a.betCount);\n        }\n\n        setFilteredPosts(filtered);\n    };\n\n    const handleSearch = (event) => {\n        const query = event.target.value;\n        setSearchQuery(query);\n    };\n\n    const handleApplyFilterChange = (event) => {\n        setApplyFilter(event.target.checked);\n    };\n\n    const handleSortChange = (event) => {\n        setSortCriteria(event.target.value);\n    };\n\n    return (\n        <div className=\"container mt-4\">\n            <div className=\"filter-options mb-3\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" checked={applyFilter} onChange={handleApplyFilterChange} className=\"form-check-input\" />\n                    Apply Filter\n                </label>\n                <select className=\"form-select mt-2\" value={sortCriteria} onChange={handleSortChange}>\n                    <option value=\"created_at\">Sort by Created Time</option>\n                    <option value=\"likes\">Sort by Likes</option>\n                </select>\n            </div>\n            <input\n                type=\"text\"\n                className=\"form-control mb-3\"\n                placeholder=\"Search by title...\"\n                value={searchQuery}\n                onChange={handleSearch}\n                disabled={!applyFilter} // Disable search when filter is not applied\n            />\n\n            {filteredPosts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`} className=\"text-decoration-none\">\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                        likes={post.betCount}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}