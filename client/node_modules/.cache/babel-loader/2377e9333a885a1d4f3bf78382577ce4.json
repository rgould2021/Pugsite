{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants';\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthWeakPasswordError, AuthUnknownError } from './errors';\n\nconst _getErrorMessage = err => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\n\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nexport async function handleError(error) {\n  var _a;\n\n  if (!looksLikeFetchResponse(error)) {\n    throw new AuthRetryableFetchError(_getErrorMessage(error), 0);\n  }\n\n  if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    throw new AuthRetryableFetchError(_getErrorMessage(error), error.status);\n  }\n\n  let data;\n\n  try {\n    data = await error.json();\n  } catch (e) {\n    throw new AuthUnknownError(_getErrorMessage(e), e);\n  }\n\n  let errorCode = undefined;\n  const responseAPIVersion = parseResponseAPIVersion(error);\n\n  if (responseAPIVersion && responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp && typeof data === 'object' && data && typeof data.code === 'string') {\n    errorCode = data.code;\n  } else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n    errorCode = data.error_code;\n  }\n\n  if (!errorCode) {\n    // Legacy support for weak password errors, when there were no error codes\n    if (typeof data === 'object' && data && typeof data.weak_password === 'object' && data.weak_password && Array.isArray(data.weak_password.reasons) && data.weak_password.reasons.length && data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n      throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n    }\n  } else if (errorCode === 'weak_password') {\n    throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n  }\n\n  throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\n\nconst _getRequestParams = (method, options, parameters, body) => {\n  const params = {\n    method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n\n  if (method === 'GET') {\n    return params;\n  }\n\n  params.headers = Object.assign({\n    'Content-Type': 'application/json;charset=UTF-8'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return Object.assign(Object.assign({}, params), parameters);\n};\n\nexport async function _request(fetcher, method, url, options) {\n  var _a;\n\n  const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n\n  if (!headers[API_VERSION_HEADER_NAME]) {\n    headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name;\n  }\n\n  if (options === null || options === void 0 ? void 0 : options.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`;\n  }\n\n  const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n\n  if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n    qs['redirect_to'] = options.redirectTo;\n  }\n\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n  const data = await _handleRequest(fetcher, method, url + queryString, {\n    headers,\n    noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson\n  }, {}, options === null || options === void 0 ? void 0 : options.body);\n  return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : {\n    data: Object.assign({}, data),\n    error: null\n  };\n}\n\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n  const requestParams = _getRequestParams(method, options, parameters, body);\n\n  let result;\n\n  try {\n    result = await fetcher(url, Object.assign(Object.assign({}, requestParams), {\n      // UNDER NO CIRCUMSTANCE SHOULD THIS OPTION BE REMOVED, YOU MAY BE OPENING UP A SECURITY HOLE IN NEXT.JS APPS\n      // https://nextjs.org/docs/app/building-your-application/caching#opting-out-1\n      cache: 'no-store'\n    }));\n  } catch (e) {\n    console.error(e); // fetch failed, likely due to a network or CORS error\n\n    throw new AuthRetryableFetchError(_getErrorMessage(e), 0);\n  }\n\n  if (!result.ok) {\n    await handleError(result);\n  }\n\n  if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n    return result;\n  }\n\n  try {\n    return await result.json();\n  } catch (e) {\n    await handleError(e);\n  }\n}\n\nexport function _sessionResponse(data) {\n  var _a;\n\n  let session = null;\n\n  if (hasSession(data)) {\n    session = Object.assign({}, data);\n\n    if (!data.expires_at) {\n      session.expires_at = expiresAt(data.expires_in);\n    }\n  }\n\n  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n  return {\n    data: {\n      session,\n      user\n    },\n    error: null\n  };\n}\nexport function _sessionResponsePassword(data) {\n  const response = _sessionResponse(data);\n\n  if (!response.error && data.weak_password && typeof data.weak_password === 'object' && Array.isArray(data.weak_password.reasons) && data.weak_password.reasons.length && data.weak_password.message && typeof data.weak_password.message === 'string' && data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n    response.data.weak_password = data.weak_password;\n  }\n\n  return response;\n}\nexport function _userResponse(data) {\n  var _a;\n\n  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n  return {\n    data: {\n      user\n    },\n    error: null\n  };\n}\nexport function _ssoResponse(data) {\n  return {\n    data,\n    error: null\n  };\n}\nexport function _generateLinkResponse(data) {\n  const {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type\n  } = data,\n        rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n\n  const properties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type\n  };\n  const user = Object.assign({}, rest);\n  return {\n    data: {\n      properties,\n      user\n    },\n    error: null\n  };\n}\nexport function _noResolveJsonResponse(data) {\n  return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\n\nfunction hasSession(data) {\n  return data.access_token && data.refresh_token && data.expires_in;\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,uBAAvB,QAAsD,aAAtD;AACA,SAASC,SAAT,EAAoBC,sBAApB,EAA4CC,uBAA5C,QAA2E,WAA3E;AAUA,SACEC,YADF,EAEEC,uBAFF,EAGEC,qBAHF,EAIEC,gBAJF,QAKO,UALP;;AAsBA,MAAMC,gBAAgB,GAAIC,GAAD,IACvBA,GAAG,CAACC,GAAJ,IAAWD,GAAG,CAACE,OAAf,IAA0BF,GAAG,CAACG,iBAA9B,IAAmDH,GAAG,CAACI,KAAvD,IAAgEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CADlE;;AAGA,MAAMO,mBAAmB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA5B;AAEA,OAAO,eAAeC,WAAf,CAA2BJ,KAA3B,EAAyC;;;EAC9C,IAAI,CAACX,sBAAsB,CAACW,KAAD,CAA3B,EAAoC;IAClC,MAAM,IAAIR,uBAAJ,CAA4BG,gBAAgB,CAACK,KAAD,CAA5C,EAAqD,CAArD,CAAN;EACD;;EAED,IAAIG,mBAAmB,CAACE,QAApB,CAA6BL,KAAK,CAACM,MAAnC,CAAJ,EAAgD;IAC9C;IACA,MAAM,IAAId,uBAAJ,CAA4BG,gBAAgB,CAACK,KAAD,CAA5C,EAAqDA,KAAK,CAACM,MAA3D,CAAN;EACD;;EAED,IAAIC,IAAJ;;EACA,IAAI;IACFA,IAAI,GAAG,MAAMP,KAAK,CAACQ,IAAN,EAAb;EACD,CAFD,CAEE,OAAOC,CAAP,EAAe;IACf,MAAM,IAAIf,gBAAJ,CAAqBC,gBAAgB,CAACc,CAAD,CAArC,EAA0CA,CAA1C,CAAN;EACD;;EAED,IAAIC,SAAS,GAAuBC,SAApC;EAEA,MAAMC,kBAAkB,GAAGtB,uBAAuB,CAACU,KAAD,CAAlD;;EACA,IACEY,kBAAkB,IAClBA,kBAAkB,CAACC,OAAnB,MAAgC3B,YAAY,CAAC,YAAD,CAAZ,CAA2B4B,SAD3D,IAEA,OAAOP,IAAP,KAAgB,QAFhB,IAGAA,IAHA,IAIA,OAAOA,IAAI,CAACQ,IAAZ,KAAqB,QALvB,EAME;IACAL,SAAS,GAAGH,IAAI,CAACQ,IAAjB;EACD,CARD,MAQO,IAAI,OAAOR,IAAP,KAAgB,QAAhB,IAA4BA,IAA5B,IAAoC,OAAOA,IAAI,CAACS,UAAZ,KAA2B,QAAnE,EAA6E;IAClFN,SAAS,GAAGH,IAAI,CAACS,UAAjB;EACD;;EAED,IAAI,CAACN,SAAL,EAAgB;IACd;IACA,IACE,OAAOH,IAAP,KAAgB,QAAhB,IACAA,IADA,IAEA,OAAOA,IAAI,CAACU,aAAZ,KAA8B,QAF9B,IAGAV,IAAI,CAACU,aAHL,IAIAC,KAAK,CAACC,OAAN,CAAcZ,IAAI,CAACU,aAAL,CAAmBG,OAAjC,CAJA,IAKAb,IAAI,CAACU,aAAL,CAAmBG,OAAnB,CAA2BC,MAL3B,IAMAd,IAAI,CAACU,aAAL,CAAmBG,OAAnB,CAA2BE,MAA3B,CAAkC,CAACC,CAAD,EAAaC,CAAb,KAAwBD,CAAC,IAAI,OAAOC,CAAP,KAAa,QAA5E,EAAsF,IAAtF,CAPF,EAQE;MACA,MAAM,IAAI/B,qBAAJ,CACJE,gBAAgB,CAACY,IAAD,CADZ,EAEJP,KAAK,CAACM,MAFF,EAGJC,IAAI,CAACU,aAAL,CAAmBG,OAHf,CAAN;IAKD;EACF,CAjBD,MAiBO,IAAIV,SAAS,KAAK,eAAlB,EAAmC;IACxC,MAAM,IAAIjB,qBAAJ,CACJE,gBAAgB,CAACY,IAAD,CADZ,EAEJP,KAAK,CAACM,MAFF,EAGJ,WAAI,CAACW,aAAL,MAAkB,IAAlB,IAAkBQ,aAAlB,GAAkB,MAAlB,GAAkBA,GAAEL,OAApB,KAA+B,EAH3B,CAAN;EAKD;;EAED,MAAM,IAAI7B,YAAJ,CAAiBI,gBAAgB,CAACY,IAAD,CAAjC,EAAyCP,KAAK,CAACM,MAAN,IAAgB,GAAzD,EAA8DI,SAA9D,CAAN;AACD;;AAED,MAAMgB,iBAAiB,GAAG,CACxBC,MADwB,EAExBC,OAFwB,EAGxBC,UAHwB,EAIxBC,IAJwB,KAKtB;EACF,MAAMC,MAAM,GAAyB;IAAEJ,MAAF;IAAUK,OAAO,EAAE,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEA,OAAT,KAAoB;EAAvC,CAArC;;EAEA,IAAIL,MAAM,KAAK,KAAf,EAAsB;IACpB,OAAOI,MAAP;EACD;;EAEDA,MAAM,CAACC,OAAP,GAAcC;IAAK,gBAAgB;EAArB,GAA0DL,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEI,OAAnE,CAAd;EACAD,MAAM,CAACD,IAAP,GAAc7B,IAAI,CAACC,SAAL,CAAe4B,IAAf,CAAd;EACA,uCAAYC,MAAZ,GAAuBF,UAAvB;AACD,CAfD;;AA4BA,OAAO,eAAeK,QAAf,CACLC,OADK,EAELR,MAFK,EAGLS,GAHK,EAILR,OAJK,EAIyB;;;EAE9B,MAAMI,OAAO,qBACRJ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEI,OADD,CAAb;;EAIA,IAAI,CAACA,OAAO,CAAC7C,uBAAD,CAAZ,EAAuC;IACrC6C,OAAO,CAAC7C,uBAAD,CAAP,GAAmCD,YAAY,CAAC,YAAD,CAAZ,CAA2BmD,IAA9D;EACD;;EAED,IAAIT,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEU,GAAb,EAAkB;IAChBN,OAAO,CAAC,eAAD,CAAP,GAA2B,UAAUJ,OAAO,CAACU,GAAG,EAAhD;EACD;;EAED,MAAMC,EAAE,GAAG,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,KAAT,MAAc,IAAd,IAAcf,aAAd,GAAcA,EAAd,GAAkB,EAA7B;;EACA,IAAIG,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEa,UAAb,EAAyB;IACvBF,EAAE,CAAC,aAAD,CAAF,GAAoBX,OAAO,CAACa,UAA5B;EACD;;EAED,MAAMC,WAAW,GAAGT,MAAM,CAACU,IAAP,CAAYJ,EAAZ,EAAgBlB,MAAhB,GAAyB,MAAM,IAAIuB,eAAJ,CAAoBL,EAApB,EAAwBM,QAAxB,EAA/B,GAAoE,EAAxF;EACA,MAAMtC,IAAI,GAAG,MAAMuC,cAAc,CAC/BX,OAD+B,EAE/BR,MAF+B,EAG/BS,GAAG,GAAGM,WAHyB,EAI/B;IACEV,OADF;IAEEe,aAAa,EAAEnB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEmB;EAF1B,CAJ+B,EAQ/B,EAR+B,EAS/BnB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEE,IATsB,CAAjC;EAWA,OAAO,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEkB,KAAT,IAAiBpB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEoB,KAAT,CAAezC,IAAf,CAAjB,GAAwC;IAAEA,IAAI,oBAAOA,IAAP,CAAN;IAAqBP,KAAK,EAAE;EAA5B,CAA/C;AACD;;AAED,eAAe8C,cAAf,CACEX,OADF,EAEER,MAFF,EAGES,GAHF,EAIER,OAJF,EAKEC,UALF,EAMEC,IANF,EAMe;EAEb,MAAMmB,aAAa,GAAGvB,iBAAiB,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,CAAvC;;EAEA,IAAIoB,MAAJ;;EAEA,IAAI;IACFA,MAAM,GAAG,MAAMf,OAAO,CAACC,GAAD,EAAIH,gCACrBgB,aADqB,GACR;MAChB;MACA;MACAE,KAAK,EAAE;IAHS,CADQ,CAAJ,CAAtB;EAMD,CAPD,CAOE,OAAO1C,CAAP,EAAU;IACV2C,OAAO,CAACpD,KAAR,CAAcS,CAAd,EADU,CAGV;;IACA,MAAM,IAAIjB,uBAAJ,CAA4BG,gBAAgB,CAACc,CAAD,CAA5C,EAAiD,CAAjD,CAAN;EACD;;EAED,IAAI,CAACyC,MAAM,CAACG,EAAZ,EAAgB;IACd,MAAMjD,WAAW,CAAC8C,MAAD,CAAjB;EACD;;EAED,IAAItB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEmB,aAAb,EAA4B;IAC1B,OAAOG,MAAP;EACD;;EAED,IAAI;IACF,OAAO,MAAMA,MAAM,CAAC1C,IAAP,EAAb;EACD,CAFD,CAEE,OAAOC,CAAP,EAAe;IACf,MAAML,WAAW,CAACK,CAAD,CAAjB;EACD;AACF;;AAED,OAAM,SAAU6C,gBAAV,CAA2B/C,IAA3B,EAAoC;;;EACxC,IAAIgD,OAAO,GAAG,IAAd;;EACA,IAAIC,UAAU,CAACjD,IAAD,CAAd,EAAsB;IACpBgD,OAAO,qBAAQhD,IAAR,CAAP;;IAEA,IAAI,CAACA,IAAI,CAACkD,UAAV,EAAsB;MACpBF,OAAO,CAACE,UAAR,GAAqBrE,SAAS,CAACmB,IAAI,CAACmD,UAAN,CAA9B;IACD;EACF;;EAED,MAAMC,IAAI,GAAS,UAAI,CAACA,IAAL,MAAS,IAAT,IAASlC,aAAT,GAASA,EAAT,GAAclB,IAAjC;EACA,OAAO;IAAEA,IAAI,EAAE;MAAEgD,OAAF;MAAWI;IAAX,CAAR;IAA2B3D,KAAK,EAAE;EAAlC,CAAP;AACD;AAED,OAAM,SAAU4D,wBAAV,CAAmCrD,IAAnC,EAA4C;EAChD,MAAMsD,QAAQ,GAAGP,gBAAgB,CAAC/C,IAAD,CAAjC;;EAEA,IACE,CAACsD,QAAQ,CAAC7D,KAAV,IACAO,IAAI,CAACU,aADL,IAEA,OAAOV,IAAI,CAACU,aAAZ,KAA8B,QAF9B,IAGAC,KAAK,CAACC,OAAN,CAAcZ,IAAI,CAACU,aAAL,CAAmBG,OAAjC,CAHA,IAIAb,IAAI,CAACU,aAAL,CAAmBG,OAAnB,CAA2BC,MAJ3B,IAKAd,IAAI,CAACU,aAAL,CAAmBnB,OALnB,IAMA,OAAOS,IAAI,CAACU,aAAL,CAAmBnB,OAA1B,KAAsC,QANtC,IAOAS,IAAI,CAACU,aAAL,CAAmBG,OAAnB,CAA2BE,MAA3B,CAAkC,CAACC,CAAD,EAAaC,CAAb,KAAwBD,CAAC,IAAI,OAAOC,CAAP,KAAa,QAA5E,EAAsF,IAAtF,CARF,EASE;IACAqC,QAAQ,CAACtD,IAAT,CAAcU,aAAd,GAA8BV,IAAI,CAACU,aAAnC;EACD;;EAED,OAAO4C,QAAP;AACD;AAED,OAAM,SAAUC,aAAV,CAAwBvD,IAAxB,EAAiC;;;EACrC,MAAMoD,IAAI,GAAS,UAAI,CAACA,IAAL,MAAS,IAAT,IAASlC,aAAT,GAASA,EAAT,GAAclB,IAAjC;EACA,OAAO;IAAEA,IAAI,EAAE;MAAEoD;IAAF,CAAR;IAAkB3D,KAAK,EAAE;EAAzB,CAAP;AACD;AAED,OAAM,SAAU+D,YAAV,CAAuBxD,IAAvB,EAAgC;EACpC,OAAO;IAAEA,IAAF;IAAQP,KAAK,EAAE;EAAf,CAAP;AACD;AAED,OAAM,SAAUgE,qBAAV,CAAgCzD,IAAhC,EAAyC;EAC7C,MAAM;IAAE0D,WAAF;IAAeC,SAAf;IAA0BC,YAA1B;IAAwCC,WAAxC;IAAqDC;EAArD,IAAoF9D,IAA1F;EAAA,MAAiF+D,IAAI,UAAK/D,IAAL,EAA/E,gFAA+E,CAArF;;EAEA,MAAMgE,UAAU,GAA2B;IACzCN,WADyC;IAEzCC,SAFyC;IAGzCC,YAHyC;IAIzCC,WAJyC;IAKzCC;EALyC,CAA3C;EAQA,MAAMV,IAAI,qBAAcW,IAAd,CAAV;EACA,OAAO;IACL/D,IAAI,EAAE;MACJgE,UADI;MAEJZ;IAFI,CADD;IAKL3D,KAAK,EAAE;EALF,CAAP;AAOD;AAED,OAAM,SAAUwE,sBAAV,CAAiCjE,IAAjC,EAA0C;EAC9C,OAAOA,IAAP;AACD;AAED;;;;;;AAKA,SAASiD,UAAT,CAAoBjD,IAApB,EAA6B;EAC3B,OAAOA,IAAI,CAACkE,YAAL,IAAqBlE,IAAI,CAACmE,aAA1B,IAA2CnE,IAAI,CAACmD,UAAvD;AACD","names":["API_VERSIONS","API_VERSION_HEADER_NAME","expiresAt","looksLikeFetchResponse","parseResponseAPIVersion","AuthApiError","AuthRetryableFetchError","AuthWeakPasswordError","AuthUnknownError","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","NETWORK_ERROR_CODES","handleError","includes","status","data","json","e","errorCode","undefined","responseAPIVersion","getTime","timestamp","code","error_code","weak_password","Array","isArray","reasons","length","reduce","a","i","_a","_getRequestParams","method","options","parameters","body","params","headers","Object","_request","fetcher","url","name","jwt","qs","query","redirectTo","queryString","keys","URLSearchParams","toString","_handleRequest","noResolveJson","xform","requestParams","result","cache","console","ok","_sessionResponse","session","hasSession","expires_at","expires_in","user","_sessionResponsePassword","response","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","access_token","refresh_token"],"sources":["/Users/rickygould/Documents/School/FullStack/web102_unit7lab-main/client/node_modules/@supabase/auth-js/src/lib/fetch.ts"],"sourcesContent":["import { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants'\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers'\nimport {\n  AuthResponse,\n  AuthResponsePassword,\n  SSOResponse,\n  GenerateLinkProperties,\n  GenerateLinkResponse,\n  User,\n  UserResponse,\n} from './types'\nimport {\n  AuthApiError,\n  AuthRetryableFetchError,\n  AuthWeakPasswordError,\n  AuthUnknownError,\n} from './errors'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst NETWORK_ERROR_CODES = [502, 503, 504]\n\nexport async function handleError(error: unknown) {\n  if (!looksLikeFetchResponse(error)) {\n    throw new AuthRetryableFetchError(_getErrorMessage(error), 0)\n  }\n\n  if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    throw new AuthRetryableFetchError(_getErrorMessage(error), error.status)\n  }\n\n  let data: any\n  try {\n    data = await error.json()\n  } catch (e: any) {\n    throw new AuthUnknownError(_getErrorMessage(e), e)\n  }\n\n  let errorCode: string | undefined = undefined\n\n  const responseAPIVersion = parseResponseAPIVersion(error)\n  if (\n    responseAPIVersion &&\n    responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n    typeof data === 'object' &&\n    data &&\n    typeof data.code === 'string'\n  ) {\n    errorCode = data.code\n  } else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n    errorCode = data.error_code\n  }\n\n  if (!errorCode) {\n    // Legacy support for weak password errors, when there were no error codes\n    if (\n      typeof data === 'object' &&\n      data &&\n      typeof data.weak_password === 'object' &&\n      data.weak_password &&\n      Array.isArray(data.weak_password.reasons) &&\n      data.weak_password.reasons.length &&\n      data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)\n    ) {\n      throw new AuthWeakPasswordError(\n        _getErrorMessage(data),\n        error.status,\n        data.weak_password.reasons\n      )\n    }\n  } else if (errorCode === 'weak_password') {\n    throw new AuthWeakPasswordError(\n      _getErrorMessage(data),\n      error.status,\n      data.weak_password?.reasons || []\n    )\n  }\n\n  throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode)\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\ninterface GotrueRequestOptions extends FetchOptions {\n  jwt?: string\n  redirectTo?: string\n  body?: object\n  query?: { [key: string]: string }\n  /**\n   * Function that transforms api response from gotrue into a desirable / standardised format\n   */\n  xform?: (data: any) => any\n}\n\nexport async function _request(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: GotrueRequestOptions\n) {\n  const headers = {\n    ...options?.headers,\n  }\n\n  if (!headers[API_VERSION_HEADER_NAME]) {\n    headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name\n  }\n\n  if (options?.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`\n  }\n\n  const qs = options?.query ?? {}\n  if (options?.redirectTo) {\n    qs['redirect_to'] = options.redirectTo\n  }\n\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\n  const data = await _handleRequest(\n    fetcher,\n    method,\n    url + queryString,\n    {\n      headers,\n      noResolveJson: options?.noResolveJson,\n    },\n    {},\n    options?.body\n  )\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  const requestParams = _getRequestParams(method, options, parameters, body)\n\n  let result: any\n\n  try {\n    result = await fetcher(url, {\n      ...requestParams,\n      // UNDER NO CIRCUMSTANCE SHOULD THIS OPTION BE REMOVED, YOU MAY BE OPENING UP A SECURITY HOLE IN NEXT.JS APPS\n      // https://nextjs.org/docs/app/building-your-application/caching#opting-out-1\n      cache: 'no-store',\n    })\n  } catch (e) {\n    console.error(e)\n\n    // fetch failed, likely due to a network or CORS error\n    throw new AuthRetryableFetchError(_getErrorMessage(e), 0)\n  }\n\n  if (!result.ok) {\n    await handleError(result)\n  }\n\n  if (options?.noResolveJson) {\n    return result\n  }\n\n  try {\n    return await result.json()\n  } catch (e: any) {\n    await handleError(e)\n  }\n}\n\nexport function _sessionResponse(data: any): AuthResponse {\n  let session = null\n  if (hasSession(data)) {\n    session = { ...data }\n\n    if (!data.expires_at) {\n      session.expires_at = expiresAt(data.expires_in)\n    }\n  }\n\n  const user: User = data.user ?? (data as User)\n  return { data: { session, user }, error: null }\n}\n\nexport function _sessionResponsePassword(data: any): AuthResponsePassword {\n  const response = _sessionResponse(data) as AuthResponsePassword\n\n  if (\n    !response.error &&\n    data.weak_password &&\n    typeof data.weak_password === 'object' &&\n    Array.isArray(data.weak_password.reasons) &&\n    data.weak_password.reasons.length &&\n    data.weak_password.message &&\n    typeof data.weak_password.message === 'string' &&\n    data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)\n  ) {\n    response.data.weak_password = data.weak_password\n  }\n\n  return response\n}\n\nexport function _userResponse(data: any): UserResponse {\n  const user: User = data.user ?? (data as User)\n  return { data: { user }, error: null }\n}\n\nexport function _ssoResponse(data: any): SSOResponse {\n  return { data, error: null }\n}\n\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\n\n  const properties: GenerateLinkProperties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type,\n  }\n\n  const user: User = { ...rest }\n  return {\n    data: {\n      properties,\n      user,\n    },\n    error: null,\n  }\n}\n\nexport function _noResolveJsonResponse(data: any): Response {\n  return data\n}\n\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data: any): boolean {\n  return data.access_token && data.refresh_token && data.expires_in\n}\n"]},"metadata":{},"sourceType":"module"}