{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select();\n      setPosts(data);\n    };\n\n    fetchPosts();\n  }, []); // Empty dependency array to trigger fetchPosts only once after the component is mounted\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: posts && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title,\n      author: post.author,\n      description: post.description,\n      image: post.image // Pass image data to Card component\n\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: 'No Challenges Yet ðŸ˜ž'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","ReadPosts","props","posts","setPosts","fetchPosts","data","from","select","length","map","post","index","id","title","author","description","image"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = (props) => {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase\n                .from('Posts')\n                .select();\n        \n            setPosts(data);\n        };\n\n        fetchPosts();\n    }, []); // Empty dependency array to trigger fetchPosts only once after the component is mounted\n    \n    return (\n        <div className=\"ReadPosts\">\n            {\n                posts && posts.length > 0 ?\n                posts.map((post, index) => \n                   <Card \n                       key={post.id} \n                       id={post.id} \n                       title={post.title} \n                       author={post.author} \n                       description={post.description} \n                       image={post.image} // Pass image data to Card component\n                   />\n                ) : <h2>{'No Challenges Yet ðŸ˜ž'}</h2>\n            }\n        </div>  \n    );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAG,YAAY;MAC3B,MAAM;QAAEC;MAAF,IAAW,MAAMN,QAAQ,CAC1BO,IADkB,CACb,OADa,EAElBC,MAFkB,EAAvB;MAIAJ,QAAQ,CAACE,IAAD,CAAR;IACH,CAND;;IAQAD,UAAU;EACb,CAVQ,EAUN,EAVM,CAAT,CAHyB,CAajB;;EAER,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UAEQF,KAAK,IAAIA,KAAK,CAACM,MAAN,GAAe,CAAxB,GACAN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP,QAAC,IAAD;MAEI,EAAE,EAAED,IAAI,CAACE,EAFb;MAGI,KAAK,EAAEF,IAAI,CAACG,KAHhB;MAII,MAAM,EAAEH,IAAI,CAACI,MAJjB;MAKI,WAAW,EAAEJ,IAAI,CAACK,WALtB;MAMI,KAAK,EAAEL,IAAI,CAACM,KANhB,CAMuB;;IANvB,GACSN,IAAI,CAACE,EADd;MAAA;MAAA;MAAA;IAAA,QADH,CADA,gBAUI;MAAA,UAAK;IAAL;MAAA;MAAA;MAAA;IAAA;EAZZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CAhCD;;GAAMZ,S;;KAAAA,S;AAkCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}