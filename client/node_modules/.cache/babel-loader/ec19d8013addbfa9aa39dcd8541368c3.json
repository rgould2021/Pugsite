{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\n\nvar GoTrueAdminApi = /*#__PURE__*/function () {\n  function GoTrueAdminApi(_ref) {\n    var _ref$url = _ref.url,\n        url = _ref$url === void 0 ? '' : _ref$url,\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? {} : _ref$headers,\n        fetch = _ref.fetch;\n\n    _classCallCheck(this, GoTrueAdminApi);\n\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n\n\n  _createClass(GoTrueAdminApi, [{\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwt) {\n        var scope,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                scope = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'global';\n                _context.prev = 1;\n                _context.next = 4;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/logout?scope=\").concat(scope), {\n                  headers: this.headers,\n                  jwt: jwt,\n                  noResolveJson: true\n                });\n\n              case 4:\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: null\n                });\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n\n                if (!isAuthError(_context.t0)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: _context.t0\n                });\n\n              case 11:\n                throw _context.t0;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function signOut(_x) {\n        return _signOut.apply(this, arguments);\n      }\n\n      return signOut;\n    }()\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n\n  }, {\n    key: \"inviteUserByEmail\",\n    value: function () {\n      var _inviteUserByEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email) {\n        var options,\n            _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                _context2.prev = 1;\n                _context2.next = 4;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/invite\"), {\n                  body: {\n                    email: email,\n                    data: options.data\n                  },\n                  headers: this.headers,\n                  redirectTo: options.redirectTo,\n                  xform: _userResponse\n                });\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                if (!isAuthError(_context2.t0)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context2.t0\n                });\n\n              case 11:\n                throw _context2.t0;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 7]]);\n      }));\n\n      function inviteUserByEmail(_x2) {\n        return _inviteUserByEmail.apply(this, arguments);\n      }\n\n      return inviteUserByEmail;\n    }()\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n\n  }, {\n    key: \"generateLink\",\n    value: function () {\n      var _generateLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {\n        var options, rest, body;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                options = params.options, rest = __rest(params, [\"options\"]);\n                body = Object.assign(Object.assign({}, rest), options);\n\n                if ('newEmail' in rest) {\n                  // replace newEmail with new_email in request body\n                  body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                  delete body['newEmail'];\n                }\n\n                _context3.next = 6;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/generate_link\"), {\n                  body: body,\n                  headers: this.headers,\n                  xform: _generateLinkResponse,\n                  redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n                });\n\n              case 6:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!isAuthError(_context3.t0)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    properties: null,\n                    user: null\n                  },\n                  error: _context3.t0\n                });\n\n              case 13:\n                throw _context3.t0;\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n\n      function generateLink(_x3) {\n        return _generateLink.apply(this, arguments);\n      }\n\n      return generateLink;\n    }() // User Admin API\n\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n\n  }, {\n    key: \"createUser\",\n    value: function () {\n      var _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(attributes) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/users\"), {\n                  body: attributes,\n                  headers: this.headers,\n                  xform: _userResponse\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                if (!isAuthError(_context4.t0)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context4.t0\n                });\n\n              case 10:\n                throw _context4.t0;\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n\n      function createUser(_x4) {\n        return _createUser.apply(this, arguments);\n      }\n\n      return createUser;\n    }()\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n\n  }, {\n    key: \"listUsers\",\n    value: function () {\n      var _listUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params) {\n        var _a, _b, _c, _d, _e, _f, _g, pagination, response, users, total, links;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                pagination = {\n                  nextPage: null,\n                  lastPage: 0,\n                  total: 0\n                };\n                _context5.next = 4;\n                return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users\"), {\n                  headers: this.headers,\n                  noResolveJson: true,\n                  query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n                  },\n                  xform: _noResolveJsonResponse\n                });\n\n              case 4:\n                response = _context5.sent;\n\n                if (!response.error) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                throw response.error;\n\n              case 7:\n                _context5.next = 9;\n                return response.json();\n\n              case 9:\n                users = _context5.sent;\n                total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n\n                if (links.length > 0) {\n                  links.forEach(function (link) {\n                    var page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    var rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[\"\".concat(rel, \"Page\")] = page;\n                  });\n                  pagination.total = parseInt(total);\n                }\n\n                return _context5.abrupt(\"return\", {\n                  data: Object.assign(Object.assign({}, users), pagination),\n                  error: null\n                });\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                if (!isAuthError(_context5.t0)) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    users: []\n                  },\n                  error: _context5.t0\n                });\n\n              case 20:\n                throw _context5.t0;\n\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 16]]);\n      }));\n\n      function listUsers(_x5) {\n        return _listUsers.apply(this, arguments);\n      }\n\n      return listUsers;\n    }()\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n\n  }, {\n    key: \"getUserById\",\n    value: function () {\n      var _getUserById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(uid) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                  headers: this.headers,\n                  xform: _userResponse\n                });\n\n              case 3:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 6:\n                _context6.prev = 6;\n                _context6.t0 = _context6[\"catch\"](0);\n\n                if (!isAuthError(_context6.t0)) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context6.t0\n                });\n\n              case 10:\n                throw _context6.t0;\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 6]]);\n      }));\n\n      function getUserById(_x6) {\n        return _getUserById.apply(this, arguments);\n      }\n\n      return getUserById;\n    }()\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n\n  }, {\n    key: \"updateUserById\",\n    value: function () {\n      var _updateUserById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(uid, attributes) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return _request(this.fetch, 'PUT', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                  body: attributes,\n                  headers: this.headers,\n                  xform: _userResponse\n                });\n\n              case 3:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 6:\n                _context7.prev = 6;\n                _context7.t0 = _context7[\"catch\"](0);\n\n                if (!isAuthError(_context7.t0)) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context7.t0\n                });\n\n              case 10:\n                throw _context7.t0;\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 6]]);\n      }));\n\n      function updateUserById(_x7, _x8) {\n        return _updateUserById.apply(this, arguments);\n      }\n\n      return updateUserById;\n    }()\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id) {\n        var shouldSoftDelete,\n            _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                shouldSoftDelete = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : false;\n                _context8.prev = 1;\n                _context8.next = 4;\n                return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(id), {\n                  headers: this.headers,\n                  body: {\n                    should_soft_delete: shouldSoftDelete\n                  },\n                  xform: _userResponse\n                });\n\n              case 4:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8[\"catch\"](1);\n\n                if (!isAuthError(_context8.t0)) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context8.t0\n                });\n\n              case 11:\n                throw _context8.t0;\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[1, 7]]);\n      }));\n\n      function deleteUser(_x9) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n  }, {\n    key: \"_listFactors\",\n    value: function () {\n      var _listFactors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(params) {\n        var _yield$_request, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors\"), {\n                  headers: this.headers,\n                  xform: function xform(factors) {\n                    return {\n                      data: {\n                        factors: factors\n                      },\n                      error: null\n                    };\n                  }\n                });\n\n              case 3:\n                _yield$_request = _context9.sent;\n                data = _yield$_request.data;\n                error = _yield$_request.error;\n                return _context9.abrupt(\"return\", {\n                  data: data,\n                  error: error\n                });\n\n              case 9:\n                _context9.prev = 9;\n                _context9.t0 = _context9[\"catch\"](0);\n\n                if (!isAuthError(_context9.t0)) {\n                  _context9.next = 13;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  data: null,\n                  error: _context9.t0\n                });\n\n              case 13:\n                throw _context9.t0;\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 9]]);\n      }));\n\n      function _listFactors(_x10) {\n        return _listFactors2.apply(this, arguments);\n      }\n\n      return _listFactors;\n    }()\n  }, {\n    key: \"_deleteFactor\",\n    value: function () {\n      var _deleteFactor2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(params) {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors/\").concat(params.id), {\n                  headers: this.headers\n                });\n\n              case 3:\n                data = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n\n              case 7:\n                _context10.prev = 7;\n                _context10.t0 = _context10[\"catch\"](0);\n\n                if (!isAuthError(_context10.t0)) {\n                  _context10.next = 11;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", {\n                  data: null,\n                  error: _context10.t0\n                });\n\n              case 11:\n                throw _context10.t0;\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[0, 7]]);\n      }));\n\n      function _deleteFactor(_x11) {\n        return _deleteFactor2.apply(this, arguments);\n      }\n\n      return _deleteFactor;\n    }()\n  }]);\n\n  return GoTrueAdminApi;\n}();\n\nexport { GoTrueAdminApi as default };","map":{"version":3,"mappings":"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","names":["_generateLinkResponse","_noResolveJsonResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","url","headers","fetch","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","jwt","scope","noResolveJson","data","error","email","options","body","redirectTo","xform","user","params","rest","__rest","Object","new_email","newEmail","properties","attributes","pagination","nextPage","lastPage","total","query","page","_a","toString","_b","per_page","perPage","_c","_d","response","json","users","get","_e","links","_f","split","_g","length","forEach","link","parseInt","substring","rel","JSON","parse","uid","id","shouldSoftDelete","should_soft_delete","userId","factors"],"sources":["/Users/rickygould/Documents/Github/Pug-Website/Downloads/web102_unit7lab-main/client/node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts"],"sourcesContent":["import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  async signOut(\n    jwt: string,\n    scope: 'global' | 'local' | 'others' = 'global'\n  ): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      /** A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column. */\n      data?: object\n\n      /** The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL. */\n      redirectTo?: string\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}