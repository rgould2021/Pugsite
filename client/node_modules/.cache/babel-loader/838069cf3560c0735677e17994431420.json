{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('created_at'); // Default sort by created_at\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n      setPosts(data);\n      setFilteredPosts(data); // Set filtered posts initially to all posts\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    // Filter posts based on search query\n    const filtered = posts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredPosts(filtered);\n  }, [searchQuery, posts]);\n  useEffect(() => {\n    // Sort filtered posts based on sortBy value\n    const sortedPosts = [...filteredPosts].sort((a, b) => {\n      if (sortBy === 'created_at') {\n        return new Date(b.created_at) - new Date(a.created_at);\n      } else if (sortBy === 'betCount') {\n        return b.betCount - a.betCount;\n      }\n\n      return 0;\n    });\n    setFilteredPosts(sortedPosts);\n  }, [sortBy, filteredPosts]);\n\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSortByChange = event => {\n    setSortBy(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title...\",\n        onCh: true,\n        zange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortBy,\n          onChange: handleSortByChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"created_at\",\n            children: \"Created Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"betCount\",\n            children: \"Upvotes Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at,\n        betCount: post.betCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"XuPt9Z9Q0tV7VcRuxzxK/5MjoIs=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","filteredPosts","setFilteredPosts","searchQuery","setSearchQuery","sortBy","setSortBy","fetchPosts","data","from","select","filtered","filter","post","title","toLowerCase","includes","sortedPosts","sort","a","b","Date","created_at","betCount","handleSearch","event","target","value","handleSortByChange","map","id","author","description","image"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [sortBy, setSortBy] = useState('created_at'); // Default sort by created_at\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n            setPosts(data);\n            setFilteredPosts(data); // Set filtered posts initially to all posts\n        };\n\n        fetchPosts();\n    }, []);\n\n    useEffect(() => {\n        // Filter posts based on search query\n        const filtered = posts.filter(post =>\n            post.title.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n        setFilteredPosts(filtered);\n    }, [searchQuery, posts]);\n\n    useEffect(() => {\n        // Sort filtered posts based on sortBy value\n        const sortedPosts = [...filteredPosts].sort((a, b) => {\n            if (sortBy === 'created_at') {\n                return new Date(b.created_at) - new Date(a.created_at);\n            } else if (sortBy === 'betCount') {\n                return b.betCount - a.betCount;\n            }\n            return 0;\n        });\n        setFilteredPosts(sortedPosts);\n    }, [sortBy, filteredPosts]);\n\n    const handleSearch = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    const handleSortByChange = (event) => {\n        setSortBy(event.target.value);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <div>\n                <input type=\"text\" placeholder=\"Search by title...\" onCh zange={handleSearch} />\n                <label>\n                    Sort by:\n                    <select value={sortBy} onChange={handleSortByChange}>\n                        <option value=\"created_at\">Created Time</option>\n                        <option value=\"betCount\">Upvotes Count</option>\n                    </select>\n                </label>\n            </div>\n            {filteredPosts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`}>\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                        betCount={post.betCount}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}