{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  console.log('Post ID:', postId); // Debug statement\n\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Ensure postId is a valid ID\n    if (!postId || isNaN(parseInt(postId))) {\n      setError('Invalid post ID');\n      return;\n    }\n\n    const fetchPost = async () => {\n      try {\n        const {\n          data\n        } = await supabase.from('Posts').select('*').eq('id', postId).single();\n        setPost(data);\n      } catch (error) {\n        setError('Error fetching post data');\n      }\n    };\n\n    fetchPost();\n  }, [postId]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const {\n          data\n        } = await supabase.from('Comments').select('*').eq('post_id', postId);\n        setComments(data || []);\n      } catch (error) {\n        setError('Error fetching comments data');\n      }\n    };\n\n    if (postId) {\n      fetchComments();\n    }\n  }, [postId]);\n\n  const handleSubmitComment = async event => {\n    event.preventDefault();\n    console.log('Submitting comment...'); // Debug statement\n\n    if (!commentText.trim()) return;\n\n    try {\n      await supabase.from('Comments').insert([{\n        post_id: postId,\n        text: commentText\n      }]);\n      setCommentText(''); // Refresh comments after adding new comment\n\n      const {\n        data\n      } = await supabase.from('Comments').select('*').eq('post_id', postId);\n      setComments(data || []);\n    } catch (error) {\n      setError('Error adding comment');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostPage\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-details\",\n        children: post ? /*#__PURE__*/_jsxDEV(Card, {\n          id: post.id,\n          title: post.title,\n          author: post.author,\n          description: post.description,\n          image: post.image,\n          created_at: post.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No post found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment.text\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitComment,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: commentText,\n            onChange: e => setCommentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostPage, \"qB+DAe63xsb37tqRkhFX2041ipU=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Card","supabase","PostPage","postId","console","log","post","setPost","comments","setComments","commentText","setCommentText","error","setError","isNaN","parseInt","fetchPost","data","from","select","eq","single","fetchComments","handleSubmitComment","event","preventDefault","trim","insert","post_id","text","id","title","author","description","image","created_at","map","comment","e","target","value"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst PostPage = () => {\n    const { postId } = useParams();\n    console.log('Post ID:', postId); // Debug statement\n\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [commentText, setCommentText] = useState('');\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Ensure postId is a valid ID\n        if (!postId || isNaN(parseInt(postId))) {\n            setError('Invalid post ID');\n            return;\n        }\n\n        const fetchPost = async () => {\n            try {\n                const { data } = await supabase.from('Posts').select('*').eq('id', postId).single();\n                setPost(data);\n            } catch (error) {\n                setError('Error fetching post data');\n            }\n        };\n\n        fetchPost();\n    }, [postId]);\n\n    useEffect(() => {\n        const fetchComments = async () => {\n            try {\n                const { data } = await supabase.from('Comments').select('*').eq('post_id', postId);\n                setComments(data || []);\n            } catch (error) {\n                setError('Error fetching comments data');\n            }\n        };\n\n        if (postId) {\n            fetchComments();\n        }\n    }, [postId]);\n\n    const handleSubmitComment = async (event) => {\n        event.preventDefault();\n        console.log('Submitting comment...'); // Debug statement\n        if (!commentText.trim()) return;\n\n        try {\n            await supabase.from('Comments').insert([{ post_id: postId, text: commentText }]);\n            setCommentText('');\n\n            // Refresh comments after adding new comment\n            const { data } = await supabase.from('Comments').select('*').eq('post_id', postId);\n            setComments(data || []);\n        } catch (error) {\n            setError('Error adding comment');\n        }\n    };\n\n    return (\n        <div className=\"PostPage\">\n            {error ? (\n                <p>Error: {error}</p>\n            ) : (\n                <>\n                    <div className=\"post-details\">\n                        {post ? (\n                            <Card\n                                id={post.id}\n                                title={post.title}\n                                author={post.author}\n                                description={post.description}\n                                image={post.image}\n                                created_at={post.created_at}\n                            />\n                        ) : (\n                            <p>No post found</p>\n                        )}\n                    </div>\n\n                    <div className=\"comments\">\n                        <h3>Comments</h3>\n                        <ul>\n                            {comments.map(comment => (\n                                <li key={comment.id}>{comment.text}</li>\n                            ))}\n                        </ul>\n                        <form onSubmit={handleSubmitComment}>\n                            <input type=\"text\" value={commentText} onChange={(e) => setCommentText(e.target.value)} />\n                            <button type=\"submit\">Add Comment</button>\n                        </form>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}