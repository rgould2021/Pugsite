{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Documents/Github/Pug-Site/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Dropdown } from 'react-bootstrap';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [applyFilter, setApplyFilter] = useState(false);\n  const [sortCriteria, setSortCriteria] = useState('created_at');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n      setPosts(data);\n      setFilteredPosts(data);\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    applyFilters();\n  }, [searchQuery, applyFilter, sortCriteria]);\n\n  const applyFilters = () => {\n    let filtered = [...posts];\n\n    if (applyFilter) {\n      filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n\n    if (sortCriteria === 'created_at') {\n      filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n    } else if (sortCriteria === 'likes') {\n      filtered.sort((a, b) => b.betCount - a.betCount);\n    }\n\n    setFilteredPosts(filtered);\n  };\n\n  const handleSearch = event => {\n    const query = event.target.value;\n    setSearchQuery(query);\n  };\n\n  const handleApplyFilterChange = event => {\n    setApplyFilter(event.target.checked);\n  };\n\n  const handleSortChange = eventKey => {\n    setSortCriteria(eventKey);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Apply Filter\",\n            checked: applyFilter,\n            onChange: handleApplyFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search by title...\",\n            value: searchQuery,\n            onChange: handleSearch,\n            disabled: !applyFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-basic\",\n            children: [\"Sort by: \", sortCriteria === 'created_at' ? 'Created Time' : 'Likes']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"created_at\",\n              onSelect: handleSortChange,\n              children: \"Created Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"likes\",\n              onSelect: handleSortChange,\n              children: \"Likes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          id: post.id,\n          title: post.title,\n          author: post.author,\n          description: post.description,\n          image: post.image,\n          created_at: post.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"Ye3yxgCUPeMjaW86hh0t43ql9F4=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Dropdown","Card","supabase","ReadPosts","posts","setPosts","filteredPosts","setFilteredPosts","searchQuery","setSearchQuery","applyFilter","setApplyFilter","sortCriteria","setSortCriteria","fetchPosts","data","from","select","applyFilters","filtered","filter","post","title","toLowerCase","includes","sort","a","b","Date","created_at","betCount","handleSearch","event","query","target","value","handleApplyFilterChange","checked","handleSortChange","eventKey","map","id","author","description","image"],"sources":["/Users/rickygould/Documents/Github/Pug-Site/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Dropdown } from 'react-bootstrap';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [applyFilter, setApplyFilter] = useState(false);\n    const [sortCriteria, setSortCriteria] = useState('created_at');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n            setPosts(data);\n            setFilteredPosts(data);\n        };\n\n        fetchPosts();\n    }, []);\n\n    useEffect(() => {\n        applyFilters();\n    }, [searchQuery, applyFilter, sortCriteria]);\n\n    const applyFilters = () => {\n        let filtered = [...posts];\n\n        if (applyFilter) {\n            filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n        }\n\n        if (sortCriteria === 'created_at') {\n            filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        } else if (sortCriteria === 'likes') {\n            filtered.sort((a, b) => b.betCount - a.betCount);\n        }\n\n        setFilteredPosts(filtered);\n    };\n\n    const handleSearch = (event) => {\n        const query = event.target.value;\n        setSearchQuery(query);\n    };\n\n    const handleApplyFilterChange = (event) => {\n        setApplyFilter(event.target.checked);\n    };\n\n    const handleSortChange = (eventKey) => {\n        setSortCriteria(eventKey);\n    };\n\n    return (\n        <Container>\n            <Row className=\"mb-4\">\n                <Col md={4}>\n                    <Form.Group>\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"Apply Filter\"\n                            checked={applyFilter}\n                            onChange={handleApplyFilterChange}\n                        />\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Search by title...\"\n                            value={searchQuery}\n                            onChange={handleSearch}\n                            disabled={!applyFilter}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={4}>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                            Sort by: {sortCriteria === 'created_at' ? 'Created Time' : 'Likes'}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"created_at\" onSelect={handleSortChange}>\n                                Created Time\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"likes\" onSelect={handleSortChange}>\n                                Likes\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n            </Row>\n            <Row>\n                {filteredPosts.map((post) => (\n                    <Col key={post.id} md={4} className=\"mb-3\">\n                        <Card\n                            id={post.id}\n                            title={post.title}\n                            author={post.author}\n                            description={post.description}\n                            image={post.image}\n                            created_at={post.created_at}\n                        />\n                    </Col>\n                ))}\n            </Row>\n        </Container>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,QAApC,QAAoD,iBAApD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,YAAD,CAAhD;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMmB,UAAU,GAAG,YAAY;MAC3B,MAAM;QAAEC;MAAF,IAAW,MAAMb,QAAQ,CAACc,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,6DAA9B,CAAvB;MACAZ,QAAQ,CAACU,IAAD,CAAR;MACAR,gBAAgB,CAACQ,IAAD,CAAhB;IACH,CAJD;;IAMAD,UAAU;EACb,CARQ,EAQN,EARM,CAAT;EAUAnB,SAAS,CAAC,MAAM;IACZuB,YAAY;EACf,CAFQ,EAEN,CAACV,WAAD,EAAcE,WAAd,EAA2BE,YAA3B,CAFM,CAAT;;EAIA,MAAMM,YAAY,GAAG,MAAM;IACvB,IAAIC,QAAQ,GAAG,CAAC,GAAGf,KAAJ,CAAf;;IAEA,IAAIM,WAAJ,EAAiB;MACbS,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkChB,WAAW,CAACe,WAAZ,EAAlC,CAAxB,CAAX;IACH;;IAED,IAAIX,YAAY,KAAK,YAArB,EAAmC;MAC/BO,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,UAAX,IAAyB,IAAID,IAAJ,CAASF,CAAC,CAACG,UAAX,CAAjD;IACH,CAFD,MAEO,IAAIjB,YAAY,KAAK,OAArB,EAA8B;MACjCO,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACG,QAAF,GAAaJ,CAAC,CAACI,QAAvC;IACH;;IAEDvB,gBAAgB,CAACY,QAAD,CAAhB;EACH,CAdD;;EAgBA,MAAMY,YAAY,GAAIC,KAAD,IAAW;IAC5B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;IACA1B,cAAc,CAACwB,KAAD,CAAd;EACH,CAHD;;EAKA,MAAMG,uBAAuB,GAAIJ,KAAD,IAAW;IACvCrB,cAAc,CAACqB,KAAK,CAACE,MAAN,CAAaG,OAAd,CAAd;EACH,CAFD;;EAIA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;IACnC1B,eAAe,CAAC0B,QAAD,CAAf;EACH,CAFD;;EAIA,oBACI,QAAC,SAAD;IAAA,wBACI,QAAC,GAAD;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACI,QAAC,IAAD,CAAM,KAAN;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YACI,IAAI,EAAC,UADT;YAEI,KAAK,EAAC,cAFV;YAGI,OAAO,EAAE7B,WAHb;YAII,QAAQ,EAAE0B;UAJd;YAAA;YAAA;YAAA;UAAA,QADJ,eAOI,QAAC,IAAD,CAAM,OAAN;YACI,IAAI,EAAC,MADT;YAEI,WAAW,EAAC,oBAFhB;YAGI,KAAK,EAAE5B,WAHX;YAII,QAAQ,EAAEuB,YAJd;YAKI,QAAQ,EAAE,CAACrB;UALf;YAAA;YAAA;YAAA;UAAA,QAPJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAkBI,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACI,QAAC,QAAD;UAAA,wBACI,QAAC,QAAD,CAAU,MAAV;YAAiB,OAAO,EAAC,WAAzB;YAAqC,EAAE,EAAC,gBAAxC;YAAA,wBACcE,YAAY,KAAK,YAAjB,GAAgC,cAAhC,GAAiD,OAD/D;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAII,QAAC,QAAD,CAAU,IAAV;YAAA,wBACI,QAAC,QAAD,CAAU,IAAV;cAAe,QAAQ,EAAC,YAAxB;cAAqC,QAAQ,EAAE0B,gBAA/C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAII,QAAC,QAAD,CAAU,IAAV;cAAe,QAAQ,EAAC,OAAxB;cAAgC,QAAQ,EAAEA,gBAA1C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAmCI,QAAC,GAAD;MAAA,UACKhC,aAAa,CAACkC,GAAd,CAAmBnB,IAAD,iBACf,QAAC,GAAD;QAAmB,EAAE,EAAE,CAAvB;QAA0B,SAAS,EAAC,MAApC;QAAA,uBACI,QAAC,IAAD;UACI,EAAE,EAAEA,IAAI,CAACoB,EADb;UAEI,KAAK,EAAEpB,IAAI,CAACC,KAFhB;UAGI,MAAM,EAAED,IAAI,CAACqB,MAHjB;UAII,WAAW,EAAErB,IAAI,CAACsB,WAJtB;UAKI,KAAK,EAAEtB,IAAI,CAACuB,KALhB;UAMI,UAAU,EAAEvB,IAAI,CAACQ;QANrB;UAAA;UAAA;UAAA;QAAA;MADJ,GAAUR,IAAI,CAACoB,EAAf;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QAnCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoDH,CAtGD;;GAAMtC,S;;KAAAA,S;AAwGN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}