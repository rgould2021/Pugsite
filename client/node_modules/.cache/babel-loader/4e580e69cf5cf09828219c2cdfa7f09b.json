{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at');\n      setPosts(data);\n    };\n\n    fetchPosts();\n  }, []);\n  const filteredPosts = searchQuery ? posts.filter(post => post.title.toLowerCase().startsWith(searchQuery.toLowerCase())) : posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"H8XGT69Pw0IU5QNQMVUhEfLiSIU=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","searchQuery","setSearchQuery","fetchPosts","data","from","select","filteredPosts","filter","post","title","toLowerCase","startsWith","e","target","value","map","id","author","description","image","created_at"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at');\n            setPosts(data);\n        };\n\n        fetchPosts();\n    }, []);\n\n    const filteredPosts = searchQuery\n        ? posts.filter(post => post.title.toLowerCase().startsWith(searchQuery.toLowerCase()))\n        : posts;\n\n    return (\n        <div className=\"ReadPosts\">\n            <input\n                type=\"text\"\n                placeholder=\"Search by title\"\n                value={searchQuery}\n                onChange={e => setSearchQuery(e.target.value)}\n            />\n            {filteredPosts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`}>\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,YAAY;MAC3B,MAAM;QAAEC;MAAF,IAAW,MAAMP,QAAQ,CAACQ,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,mDAA9B,CAAvB;MACAN,QAAQ,CAACI,IAAD,CAAR;IACH,CAHD;;IAKAD,UAAU;EACb,CAPQ,EAON,EAPM,CAAT;EASA,MAAMI,aAAa,GAAGN,WAAW,GAC3BF,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,UAAzB,CAAoCX,WAAW,CAACU,WAAZ,EAApC,CAArB,CAD2B,GAE3BZ,KAFN;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAC,iBAFhB;MAGI,KAAK,EAAEE,WAHX;MAII,QAAQ,EAAEY,CAAC,IAAIX,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;IAJjC;MAAA;MAAA;MAAA;IAAA,QADJ,EAOKR,aAAa,CAACS,GAAd,CAAmBP,IAAD,iBACf,QAAC,IAAD;MAAoB,EAAE,EAAG,SAAQA,IAAI,CAACQ,EAAG,EAAzC;MAAA,uBACI,QAAC,IAAD;QACI,EAAE,EAAER,IAAI,CAACQ,EADb;QAEI,KAAK,EAAER,IAAI,CAACC,KAFhB;QAGI,MAAM,EAAED,IAAI,CAACS,MAHjB;QAII,WAAW,EAAET,IAAI,CAACU,WAJtB;QAKI,KAAK,EAAEV,IAAI,CAACW,KALhB;QAMI,UAAU,EAAEX,IAAI,CAACY;MANrB;QAAA;QAAA;QAAA;MAAA;IADJ,GAAWZ,IAAI,CAACQ,EAAhB;MAAA;MAAA;MAAA;IAAA,QADH,CAPL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAvCD;;GAAMnB,S;;KAAAA,S;AAyCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}