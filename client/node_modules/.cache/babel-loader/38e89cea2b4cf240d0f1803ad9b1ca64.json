{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('created_at'); // Default sort by created_at\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount'); // Filter posts based on search query\n\n      if (searchQuery) {\n        data = data.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n      } // Sort posts based on sortBy value\n\n\n      if (sortBy === 'created_at') {\n        data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)); // Sort by created_at\n      } else if (sortBy === 'betCount') {\n        data = data.sort((a, b) => b.betCount - a.betCount); // Sort by betCount\n      }\n\n      setPosts(data);\n    };\n\n    fetchPosts();\n  }, [searchQuery, sortBy]);\n\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSortChange = e => {\n    setSortBy(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        value: searchQuery,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        onChange: handleSortChange,\n        value: sortBy,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created_at\",\n          children: \"Created Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"betCount\",\n          children: \"Upvotes Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"BWmzsDLc/TSbZYu4fs8XTCv6B/s=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","searchQuery","setSearchQuery","sortBy","setSortBy","fetchPosts","data","from","select","filter","post","title","toLowerCase","includes","sort","a","b","Date","created_at","betCount","handleSearchChange","e","target","value","handleSortChange","map","id","author","description","image"],"sources":["/Users/rickygould/Downloads/web102_unit7lab-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [sortBy, setSortBy] = useState('created_at'); // Default sort by created_at\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            let { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n\n            // Filter posts based on search query\n            if (searchQuery) {\n                data = data.filter(post =>\n                    post.title.toLowerCase().includes(searchQuery.toLowerCase())\n                );\n            }\n\n            // Sort posts based on sortBy value\n            if (sortBy === 'created_at') {\n                data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)); // Sort by created_at\n            } else if (sortBy === 'betCount') {\n                data = data.sort((a, b) => b.betCount - a.betCount); // Sort by betCount\n            }\n\n            setPosts(data);\n        };\n\n        fetchPosts();\n    }, [searchQuery, sortBy]);\n\n    const handleSearchChange = (e) => {\n        setSearchQuery(e.target.value);\n    };\n\n    const handleSortChange = (e) => {\n        setSortBy(e.target.value);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <div>\n                <label htmlFor=\"search\">Search:</label>\n                <input type=\"text\" id=\"search\" value={searchQuery} onChange={handleSearchChange} />\n            </div>\n            <div>\n                <label htmlFor=\"sort\">Sort by:</label>\n                <select id=\"sort\" onChange={handleSortChange} value={sortBy}>\n                    <option value=\"created_at\">Created Time</option>\n                    <option value=\"betCount\">Upvotes Count</option>\n                </select>\n            </div>\n            {posts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`}>\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}