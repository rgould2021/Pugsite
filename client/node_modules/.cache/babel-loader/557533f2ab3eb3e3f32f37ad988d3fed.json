{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Documents/Github/Pug-Site/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortCriteria, setSortCriteria] = useState('created_at');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n      setPosts(data);\n      setFilteredPosts(data);\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    applyFilters();\n  }, [searchQuery, sortCriteria]);\n\n  const applyFilters = () => {\n    let filtered = [...posts];\n\n    if (searchQuery) {\n      filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n\n    if (sortCriteria === 'created_at') {\n      filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n    } else if (sortCriteria === 'likes') {\n      filtered.sort((a, b) => b.betCount - a.betCount);\n    }\n\n    setFilteredPosts(filtered);\n  };\n\n  const handleSearch = event => {\n    const query = event.target.value;\n    setSearchQuery(query);\n  };\n\n  const handleSortChange = event => {\n    setSortCriteria(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-options\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortCriteria,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created_at\",\n          children: \"Sort by Created Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"likes\",\n          children: \"Sort by Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title...\",\n      value: searchQuery,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/post/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.author,\n        description: post.description,\n        image: post.image,\n        created_at: post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"tMUQBeL1geMz4HaNuuitH5du9w0=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","supabase","ReadPosts","posts","setPosts","filteredPosts","setFilteredPosts","searchQuery","setSearchQuery","sortCriteria","setSortCriteria","fetchPosts","data","from","select","applyFilters","filtered","filter","post","title","toLowerCase","includes","sort","a","b","Date","created_at","betCount","handleSearch","event","query","target","value","handleSortChange","map","id","author","description","image"],"sources":["/Users/rickygould/Documents/Github/Pug-Site/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [sortCriteria, setSortCriteria] = useState('created_at');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase.from('Posts').select('id, title, author, description, image, created_at, betCount');\n            setPosts(data);\n            setFilteredPosts(data);\n        };\n\n        fetchPosts();\n    }, []);\n\n    useEffect(() => {\n        applyFilters();\n    }, [searchQuery, sortCriteria]);\n\n    const applyFilters = () => {\n        let filtered = [...posts];\n\n        if (searchQuery) {\n            filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n        }\n\n        if (sortCriteria === 'created_at') {\n            filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        } else if (sortCriteria === 'likes') {\n            filtered.sort((a, b) => b.betCount - a.betCount);\n        }\n\n        setFilteredPosts(filtered);\n    };\n\n    const handleSearch = (event) => {\n        const query = event.target.value;\n        setSearchQuery(query);\n    };\n\n    const handleSortChange = (event) => {\n        setSortCriteria(event.target.value);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <div className=\"filter-options\">\n                <select value={sortCriteria} onChange={handleSortChange}>\n                    <option value=\"created_at\">Sort by Created Time</option>\n                    <option value=\"likes\">Sort by Likes</option>\n                </select>\n            </div>\n            <input\n                type=\"text\"\n                placeholder=\"Search by title...\"\n                value={searchQuery}\n                onChange={handleSearch}\n            />\n\n            {filteredPosts.map((post) => (\n                <Link key={post.id} to={`/post/${post.id}`}>\n                    <Card\n                        id={post.id}\n                        title={post.title}\n                        author={post.author}\n                        description={post.description}\n                        image={post.image}\n                        created_at={post.created_at}\n                    />\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}