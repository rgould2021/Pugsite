{"ast":null,"code":"var _jsxFileName = \"/Users/rickygould/Documents/Github/Pug-Site/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card as BootstrapCard, Button } from 'react-bootstrap';\nimport { supabase } from '../client';\nimport './Card.css'; // Import custom CSS for Card\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [count, setCount] = useState(props.likes || 0);\n  useEffect(() => {\n    const storedCount = localStorage.getItem(`betCount_${props.id}`);\n\n    if (storedCount) {\n      setCount(parseInt(storedCount));\n    }\n  }, [props.id]);\n\n  const updateCount = async event => {\n    event.preventDefault();\n    const updatedCount = count + 1;\n    setCount(updatedCount);\n\n    try {\n      const {\n        error\n      } = await supabase.from('Posts').update({\n        betCount: updatedCount\n      }).eq('id', props.id);\n\n      if (error) {\n        throw error;\n      }\n\n      localStorage.setItem(`betCount_${props.id}`, updatedCount.toString());\n    } catch (error) {\n      console.error('Error updating bet count:', error.message);\n      setCount(count);\n    }\n  };\n\n  const handleDelete = async event => {\n    event.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      try {\n        const {\n          error\n        } = await supabase.from('Posts').delete().eq('id', props.id);\n\n        if (error) {\n          throw error;\n        }\n\n        if (props.onDelete) {\n          props.onDelete(props.id); // Call the onDelete function passed from ReadPosts\n        }\n      } catch (error) {\n        console.error('Error deleting post:', error.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BootstrapCard, {\n    className: \"card mb-3\",\n    children: [props.image && /*#__PURE__*/_jsxDEV(BootstrapCard.Img, {\n      variant: \"top\",\n      src: props.image,\n      className: \"card-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapCard.Body, {\n      children: [/*#__PURE__*/_jsxDEV(BootstrapCard.Title, {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapCard.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: [\"by \", props.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapCard.Text, {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), props.created_at && /*#__PURE__*/_jsxDEV(BootstrapCard.Text, {\n        className: \"text-muted\",\n        children: [\"Created at: \", new Date(props.created_at).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: updateCount,\n        children: [\"\\uD83D\\uDC4D Likes: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: handleDelete,\n        className: \"mt-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"4JZxSTaVTkPfwGthZ2DsmlSWDBA=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","Card","BootstrapCard","Button","supabase","props","count","setCount","likes","storedCount","localStorage","getItem","id","parseInt","updateCount","event","preventDefault","updatedCount","error","from","update","betCount","eq","setItem","toString","console","message","handleDelete","window","confirm","delete","onDelete","image","title","author","description","created_at","Date","toLocaleString"],"sources":["/Users/rickygould/Documents/Github/Pug-Site/client/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card as BootstrapCard, Button } from 'react-bootstrap';\nimport { supabase } from '../client';\nimport './Card.css';  // Import custom CSS for Card\n\nconst Card = (props) => {\n    const [count, setCount] = useState(props.likes || 0);\n\n    useEffect(() => {\n        const storedCount = localStorage.getItem(`betCount_${props.id}`);\n        if (storedCount) {\n            setCount(parseInt(storedCount));\n        }\n    }, [props.id]);\n\n    const updateCount = async (event) => {\n        event.preventDefault();\n        const updatedCount = count + 1;\n        setCount(updatedCount);\n\n        try {\n            const { error } = await supabase\n                .from('Posts')\n                .update({ betCount: updatedCount })\n                .eq('id', props.id);\n\n            if (error) {\n                throw error;\n            }\n\n            localStorage.setItem(`betCount_${props.id}`, updatedCount.toString());\n        } catch (error) {\n            console.error('Error updating bet count:', error.message);\n            setCount(count);\n        }\n    };\n\n    const handleDelete = async (event) => {\n        event.preventDefault();\n        if (window.confirm(\"Are you sure you want to delete this post?\")) {\n            try {\n                const { error } = await supabase\n                    .from('Posts')\n                    .delete()\n                    .eq('id', props.id);\n\n                if (error) {\n                    throw error;\n                }\n\n                if (props.onDelete) {\n                    props.onDelete(props.id); // Call the onDelete function passed from ReadPosts\n                }\n            } catch (error) {\n                console.error('Error deleting post:', error.message);\n            }\n        }\n    };\n\n    return (\n        <BootstrapCard className=\"card mb-3\">\n            {props.image && <BootstrapCard.Img variant=\"top\" src={props.image} className=\"card-img\" />}\n            <BootstrapCard.Body>\n                <BootstrapCard.Title>{props.title}</BootstrapCard.Title>\n                <BootstrapCard.Subtitle className=\"mb-2 text-muted\">by {props.author}</BootstrapCard.Subtitle>\n                <BootstrapCard.Text>{props.description}</BootstrapCard.Text>\n                {props.created_at && (\n                    <BootstrapCard.Text className=\"text-muted\">\n                        Created at: {new Date(props.created_at).toLocaleString()}\n                    </BootstrapCard.Text>\n                )}\n                <Button variant=\"primary\" onClick={updateCount}>\n                    üëç Likes: {count}\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete} className=\"mt-2\">\n                    Delete\n                </Button>\n            </BootstrapCard.Body>\n        </BootstrapCard>\n    );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}